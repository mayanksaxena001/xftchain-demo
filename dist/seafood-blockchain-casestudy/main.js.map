{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/api-interceptor.ts","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/auth/auth.guard.ts","webpack:///./src/app/auth/auth.service.ts","webpack:///./src/app/dashboard/dashboard.component.html","webpack:///./src/app/dashboard/dashboard.component.ts","webpack:///./src/app/dashboard/dashboard.service.ts","webpack:///./src/app/game/block.ts","webpack:///./src/app/game/game.component.html","webpack:///./src/app/game/game.component.ts","webpack:///./src/app/game/game.service.ts","webpack:///./src/app/game/player.ts","webpack:///./src/app/header/header.component.html","webpack:///./src/app/header/header.component.ts","webpack:///./src/app/home/home.component.html","webpack:///./src/app/home/home.component.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/login/login.service.ts","webpack:///./src/app/login/sign-up/sign-up.component.html","webpack:///./src/app/login/sign-up/sign-up.component.ts","webpack:///./src/app/trade/binance.service.ts","webpack:///./src/app/trade/trade.component.html","webpack:///./src/app/trade/trade.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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AAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAE5B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAC5B,IAAI,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;QAE5B,IACI,CAAC,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;YAC1I,CAAC,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;YAC1I,CAAC,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;YAC1I,CAAC,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;YAC1I,CAAC,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,MAAM,CAAC,IAAI,IAAI,KAAK,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,IAA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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { Injectable, Inject } from '@angular/core';\nimport { HttpEvent, HttpInterceptor, HttpHandler, HttpRequest } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { AuthService } from './auth/auth.service';\n\n/**\n * https://stackoverflow.com/questions/45735655/how-to-setup-baseurl-for-angular-httpclient\n */\n\n@Injectable()\nexport class ApiInterceptor implements HttpInterceptor {\n\n    constructor(@Inject('BASE_API_URL') private baseUrl: string, private auth: AuthService) { }\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        const apiReq = req.clone({\n            setHeaders: { 'x-access-token': `${this.auth.getToken()}` },\n            url: `${this.baseUrl}/${req.url}`,\n        });\n        return next.handle(apiReq);\n    }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './login/sign-up/sign-up.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { GameComponent } from './game/game.component';\nimport { TradeComponent } from './trade/trade.component';\nimport { HomeComponent } from './home/home.component'\n\nimport { AuthGuard } from './auth/auth.guard';\n\nconst routes: Routes = [\n    {\n        path: '', component: LoginComponent\n    },\n    {\n        path: 'login', component: LoginComponent\n    },\n    {\n        path: 'game', component: GameComponent, canActivate: [AuthGuard]\n    },\n    {\n        path: 'signup', component: SignUpComponent\n    },\n    {\n        path: 'trade', component: TradeComponent, canActivate: [AuthGuard]\n    },\n    {\n        path: 'home', component: HomeComponent, canActivate: [AuthGuard]\n    },\n    {\n        path: 'dashboard', component: DashboardComponent, canActivate: [AuthGuard]\n    },\n    {\n        path: '**', component: LoginComponent\n    }\n\n];\n\n@NgModule({\n    imports: [\n        RouterModule.forRoot(\n            routes, { onSameUrlNavigation: 'reload' }\n        )\n    ],\n    exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","  <div class=\"main\">\n    <div class=\"header\">\n      <app-header>\n      </app-header>\n    </div>\n    <div class=\"router\">\n      <router-outlet>\n      </router-outlet>\n    </div>\n  </div>\n\n  <!-- <div fxFlexFill fxLayout=\"column\">\n    <header>header</header>\n    <div id=\"main\" fxLayout=\"row\" fxLayout.xs=\"column\" fxFlex>\n      <nav fxFlex=\"1 6 20%\" fxFlexOrder fxFlexOrder.xs=\"2\"> nav </nav>\n      <article fxFlex=\"3 1 60%\" fxFlexOrder fxFlexOrder.xs=\"1\"></article>\n      <aside fxFlex=\"1 6 20%\" fxFlexOrder fxFlexOrder.xs=\"3\"> aside </aside>\n    </div>\n    <footer>My footer</footer>\n  </div> -->\n\n  <!-- <div fxFlexFill fxLayout=\"column\">\n    <header>\n      <app-header>\n      </app-header>\n    </header>\n    <div class=\"router\">\n      <router-outlet></router-outlet>\n    </div>\n  </div> -->\n","import { Component } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { DashboardService } from './dashboard/dashboard.service';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n\n  constructor(private router: Router, private dashboardService: DashboardService) {\n    // router.events.subscribe((val) => {\n    //   if (val['url'] === '/dashboard') {\n    //     console.log('AppComponent router event subscription..');\n    //     this.dashboardService.showNavbar(true);\n    //   }\n    // });\n  }\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from '@angular/common/http';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\n\nimport { ApiInterceptor } from './api-interceptor';\nimport { HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { AppRoutingModule } from './app-routing.module';\n\nimport { AppComponent } from './app.component';\nimport { HeaderComponent } from './header/header.component';\nimport { LoginComponent } from './login/login.component';\nimport { SignUpComponent } from './login/sign-up/sign-up.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { GameComponent } from './game/game.component';\nimport { TradeComponent } from './trade/trade.component';\n\nimport { AuthService } from './auth/auth.service';\nimport { AuthGuard } from './auth/auth.guard';\n\nimport { LoginService } from './login/login.service';\nimport { DashboardService } from './dashboard/dashboard.service';\nimport { GameService } from './game/game.service';\nimport { BinanceService } from './trade/binance.service';\nimport { HomeComponent } from './home/home.component';\nimport { environment } from '../environments/environment';\n\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HeaderComponent,\n    LoginComponent,\n    SignUpComponent,\n    DashboardComponent,\n    GameComponent,\n    TradeComponent,\n    HomeComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule,\n    AppRoutingModule\n  ],\n  providers: [\n    AuthService,\n    AuthGuard,\n    GameService,\n    BinanceService,\n    LoginService,\n    DashboardService,\n    {\n      provide: HTTP_INTERCEPTORS,\n      useClass: ApiInterceptor,\n      multi: true\n    },\n    { provide: \"BASE_API_URL\", useValue: environment.baseUrl }\n  ],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { Router, CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from '@angular/router';\nimport { Observable } from 'rxjs';\n\n@Injectable()\nexport class AuthGuard implements CanActivate {\n\n    constructor(private router: Router) { }\n    canActivate(route: ActivatedRouteSnapshot, state: RouterStateSnapshot): boolean | Observable<boolean> | Promise<boolean> {\n        console.log('Inside Auth Guard');\n        if (localStorage.getItem('authToken')) {\n            console.log('Auth token present');\n            // logged in so return true\n            return true;\n        } else {\n            console.log('Auth token not present');\n            this.router.navigateByUrl('/login');\n        }\n        // not logged in so redirect to login page with the return url\n        // this.router.navigate(['/login'], { queryParams: { returnUrl: state.url }});\n        return false;\n    }\n\n}","import { Injectable } from '@angular/core';\n\n@Injectable()\nexport class AuthService {\n\n    getToken(): string {\n        // console.log('getToken called , Token : ', localStorage.getItem('authToken'));\n        return localStorage.getItem('authToken');\n    }\n    //TODO :  need a isAuthenticatedMethod() method\n\n}","<div class=\"preloader\" [hidden]=\"!waiting\"></div>\n\n<div class=\"container-fluid maincontainer\">\n\n  <div class=\"entities-container\" *ngIf=\"user?.type === 'CONSUMER'\">\n    <div class=\"left-container\">\n      <div class=\"left-container-label\">\n        <label>BUY ENTITIES</label>\n      </div>\n    </div>\n    <div class=\"table-container\">\n      <table class=\"table table-sm table-dark \">\n        <thead>\n          <tr>\n            <td>ENTITY</td>\n            <td>QUANTITY</td>\n            <td>VALUE</td>\n            <td>OWNER</td>\n            <td>TYPE</td>\n            <td class=\"a-center\">TRANSACT</td>\n          </tr>\n        </thead>\n        <div *ngIf='noTransferEntityData'>\n          <p class=\"a-center\" style=\"margin-top: 5%\">\n            <b>No Data Available</b>\n          </p>\n        </div>\n        <tbody *ngIf='!noTransferEntityData'>\n          <tr *ngFor=\"let x of transferEntities\">\n            <td>{{ x.name }}</td>\n            <td>{{ x.quantity }}</td>\n            <td>{{ x.value }}</td>\n            <td>{{ x.username }}</td>\n            <td>{{ x.type }}</td>\n            <td class=\"a-center\">\n              <button (click)=\"transactBtnClicked(x)\" class=\"buttonsmall\" data-toggle=\"modal\"\n                data-target=\"#transactEntity\">\n                <span>\n                  <img src=\"assets/SVGs/transact_dark.svg\">\n                </span>\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n  <div class=\"entities-container\" *ngIf=\"user?.type === 'PRODUCER' || user?.type === 'CONSUMER'\">\n    <div class=\"left-container\">\n      <div class=\"left-container-label\">\n        <label>ENTITIES</label>\n      </div>\n      <div class=\"button-right\">\n        <button class=\"buttonlarge\" *ngIf=\"user?.type === 'PRODUCER'\" data-toggle=\"modal\" data-target=\"#addEntity\">ADD\n          ENTITY</button>\n      </div>\n    </div>\n    <div class=\"table-container\">\n      <table class=\"table table-sm table-dark\">\n        <thead>\n          <tr>\n            <td>TRACK ID</td>\n            <td>ENTITY</td>\n            <td>VALUE</td>\n            <td>QUANTITY</td>\n            <td>CREATED AT</td>\n            <td>UPDATED AT</td>\n            <td *ngIf=\"user?.type === 'PRODUCER'\">EDIT</td>\n          </tr>\n        </thead>\n        <div *ngIf='noEntityData'>\n          <p class=\"a-center\" style=\"margin-top: 5%\">\n            <b>No Data Available</b>\n          </p>\n        </div>\n        <tbody *ngIf='!noEntityData'>\n          <tr *ngFor=\"let x of entities\">\n            <td>\n              <span (click)=\"entityIdClicked(x.id)\" class=\"buttonlink aqua_color trackId\" data-toggle=\"modal\"\n                data-target=\"#entityDetails\">{{ x.id }} </span>\n            </td>\n            <td >{{ x.name}}</td>\n            <td >{{ x.value }}</td>\n            <td >{{ x.quantity }}</td>\n            <td >{{ x.createdAt }}</td>\n            <td >{{ x.updatedAt }}</td>\n            <td *ngIf=\"user?.type === 'PRODUCER'\">\n              <button (click)=\"editEntity(x)\" class=\"buttonsmall\" data-toggle=\"modal\" data-target=\"#editEntity\">\n                <span>\n                  <img src=\"assets/SVGs/edit_dark.svg\">\n                </span>\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n  <div class=\"entities-container\" *ngIf=\"user?.type === 'SUPPLIER'\">\n    <div class=\"left-container\">\n      <div class=\"left-container-label\">\n        <label>SENSORS</label>\n      </div>\n      <div class=\"button-right\">\n        <button class=\"buttonlarge\" (click)='updateSensorModal()' data-toggle=\"modal\" data-target=\"#addSensor\">ADD\n          SENSOR</button>\n      </div>\n    </div>\n    <div class=\"table-container\">\n      <table class=\"table table-sm table-dark\">\n        <thead>\n          <tr>\n            <td>TRACK ID</td>\n            <td>SENSOR</td>\n            <td>STATUS</td>\n            <td>CREATED AT</td>\n            <td>UPDATED AT</td>\n          </tr>\n        </thead>\n        <div *ngIf='noSensorData'>\n          <p class=\"a-center\" style=\"margin-top: 5%\">\n            <b>No Data Available</b>\n          </p>\n        </div>\n        <tbody *ngIf='!noSensorData'>\n          <tr *ngFor=\"let x of sensors\">\n            <td>\n              <span (click)=\"sensorIdClicked(x)\" class=\"buttonlink aqua_color trackId\" data-toggle=\"modal\"\n                data-target=\"#sensorDetails\">{{ x.id }} </span>\n            </td>\n            <td>{{ x.name }}</td>\n            <td>\n              <p [ngClass]=\"getStatusColor(x?.status) ?\n              'green_color' : 'red_color'\">{{ x.status }}</p>\n            </td>\n            <td>{{ x.createdAt }}</td>\n            <td>{{ x.updatedAt }}</td>\n            <!-- <td *ngIf=\"user?.type === 'PRODUCER'\">\n              <button (click)=\"editEntity(x)\" class=\"buttonsmall\" data-toggle=\"modal\" data-target=\"#editEntity\">\n                <span>\n                  <img src=\"assets/SVGs/edit_dark.svg\">\n                </span>\n              </button>\n            </td> -->\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n  <div class=\"entities-container\">\n    <div class=\"left-container\">\n      <div class=\"left-container-label\">\n        <label>TRANSACTIONS</label>\n      </div>\n    </div>\n    <div class=\"table-container\">\n      <table class=\"table table-sm table-dark\">\n        <thead>\n          <tr>\n            <td>TRACK ID</td>\n            <td>STATUS</td>\n            <td>FROM</td>\n            <td>TO</td>\n            <td>ENTITY</td>\n            <td>AMOUNT</td>\n            <td *ngIf=\"user?.type === 'SUPPLIER'\">SENSOR ALERT</td>\n          </tr>\n        </thead>\n        <div *ngIf='noTransactionData'>\n          <p class=\"a-center\" style=\"margin-top: 5%\">\n            <b>No Data Available</b>\n          </p>\n        </div>\n        <tbody *ngIf='!noTransactionData'>\n          <tr *ngFor=\"let x of transactions\">\n            <td>\n              <span (click)=\"transactionIdClicked(x)\" class=\"buttonlink aqua_color trackId\" data-toggle=\"modal\"\n                data-target=\"#transactionDetails\">{{ x.id }} </span>\n            </td>\n            <td>\n              <p [ngClass]=\"getStatusColor(x?.status) ?\n              'green_color' : 'red_color'\">{{ x.status }}</p>\n            </td>\n            <td>{{ x.fromUsername }}</td>\n            <td>{{ x.toUsername }}</td>\n            <td>{{ x.assetName }}</td>\n            <td>{{ x.amount }}</td>\n            <td *ngIf=\"user?.type === 'SUPPLIER'\">\n              <button (click)=\"attachSensor(x)\" [disabled]=\"x.status === 'DELIVERED' \" class=\"buttonlarge\"\n                data-toggle=\"modal\" data-target=\"#attachSensor\">{{ x.action }}\n              </button>\n            </td>\n          </tr>\n        </tbody>\n      </table>\n    </div>\n  </div>\n\n\n  <!-- Attach Sensor -->\n  <div class=\"modal fade\" id=\"attachSensor\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" data-backdrop=\"static\"\n    data-keyboard=\"false\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n\n      <!-- Modal content-->\n      <div class=\"modal-content text-center popupcontainer\">\n        <div class=\"modal-header\">\n          <div class=\"row  padding10\">\n            <div class=\"col-sm-12\">\n              <p class=\"float-left popupHeading marginl10 \" *ngIf=\"updateTransactionModal?.action === 'ACCEPT' \">ATTACH\n                SENSOR\n              </p>\n              <p class=\"float-left popupHeading marginl10 \" *ngIf=\"updateTransactionModal?.action === 'MARK PICKED' \">\n                CONFIRM PICKUP\n              </p>\n              <p class=\"float-left popupHeading marginl10 \"\n                *ngIf=\"updateTransactionModal?.action === 'MARK DELIVERED' \">CONFIRM DELIVERY\n              </p>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-body\">\n          <form #attachSensorForm=\"ngForm\">\n            <div class=\"row padding10\">\n              <div class=\"col-sm-12 padding10\">\n                <input type=\"text\" class=\"popupinput\" [(ngModel)]=\"updateTransactionModal.transactionId\" [disabled]=true\n                  placeholder=\"Transaction Id\" name='transactionId' #name='ngModel' required>\n              </div>\n              <div class=\"col-sm-12 padding10 \" *ngIf=\"updateTransactionModal?.action === 'ACCEPT' \">\n                <select [(ngModel)]=\"sensorName\" name=\"type\" (change)='getSelectedSensor(sensorName)' required>\n                  <option value=\"undefined\" disabled selected>Select a sensor</option>\n                  <option *ngFor=\"let sensor of availableSensors\" [ngValue]=\"sensor.id\">{{sensor.name}}</option>\n                </select>\n              </div>\n            </div>\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-8\">\n              </div>\n              <div class=\"col-sm-6\">\n                <button (click)=\"acceptSensor(updateTransactionModal.action)\" class=\"buttonlink float-right\">CONFIRM\n                  <span>\n                    <img src=\"assets/SVGs/arrow_dark.svg\">\n                  </span>\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <!-- Add Sensor -->\n  <div class=\"modal fade\" id=\"addSensor\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" data-backdrop=\"static\"\n    data-keyboard=\"false\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n\n      <!-- Modal content-->\n      <div class=\"modal-content text-center popupcontainer\">\n        <div class=\"modal-header\">\n          <div class=\"row  padding10\">\n            <div class=\"col-sm-12\">\n              <p class=\"float-left popupHeading marginl10 \">ADD SENSOR</p>\n              <button type=\"button\" class=\"close\" (click)='closeAddSensorModal()' data-dismiss=\"modal\"\n                aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-body\">\n          <form #addSensorForm=\"ngForm\">\n            <div class=\"row padding10\">\n              <div class=\"col-sm-12 padding10\">\n                <input type=\"text\" class=\"popupinput\" [(ngModel)]=\"addSensorModal.address\" [disabled]=true\n                  placeholder=\"Address\" name='address' #address='ngModel' required>\n\n              </div>\n              <div class=\"col-sm-12 padding10 \">\n                <input type=\"text\" class=\"popupinput\" [(ngModel)]=\"addSensorModal.name\" placeholder=\"Name\" name='name'\n                  #name='ngModel' required>\n                <small *ngIf=\"name.errors && (name.dirty || name.touched)\" class=\"error-message\">\n                  <div class=\"validation-msg\" [hidden]=\"!name.errors.required\">\n                    Name is required.\n                  </div>\n                </small>\n              </div>\n            </div>\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-8\">\n              </div>\n              <div class=\"col-sm-4\">\n                <button (click)=\"addSensor()\" class=\"buttonlink float-right\" [disabled]=\"!addSensorForm.form.valid\"\n                  data-dismiss=\"modal\">Add\n                  <span>\n                    <img src=\"assets/SVGs/arrow_dark.svg\">\n                  </span>\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <!-- Add Modal -->\n  <div class=\"modal fade\" id=\"addEntity\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" data-backdrop=\"static\"\n    data-keyboard=\"false\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n\n      <!-- Modal content-->\n      <div class=\"modal-content text-center popupcontainer\">\n        <div class=\"modal-header\">\n          <div class=\"row  padding10\">\n            <div class=\"col-sm-12\">\n              <p class=\"float-left popupHeading marginl10 \">ADD ENTITY</p>\n              <button type=\"button\" class=\"close\" (click)='closeAddModal()' data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-body\">\n          <form #addEntityForm=\"ngForm\">\n            <div class=\"row padding10\">\n              <div class=\"col-sm-4\">\n                <input type=\"text\" class=\"popupinput\" [(ngModel)]=\"addEntityModal.name\" placeholder=\"Name\" name='name'\n                  #name='ngModel' required>\n                <small *ngIf=\"name.errors && (name.dirty || name.touched)\" class=\"error-message\">\n                  <div class=\"validation-msg\" [hidden]=\"!name.errors.required\">\n                    Name is required.\n                  </div>\n                </small>\n              </div>\n              <div class=\"col-sm-4\">\n                <input type=\"text\" class=\"popupinput\" [(ngModel)]=\"addEntityModal.value\" placeholder=\"Value\"\n                  name='value' #value='ngModel' required>\n                <small *ngIf=\"value.errors && (value.dirty || value.touched)\" class=\"error-message\">\n                  <div class=\"validation-msg\" [hidden]=\"!value.errors.required\">\n                    Value is required.\n                  </div>\n                </small>\n              </div>\n              <div class=\"col-sm-4\">\n                <input type=\"text\" class=\"popupinput\" [(ngModel)]=\"addEntityModal.quantity\" pattern=\"[0-9]+\"\n                  placeholder=\"Quantity\" name='quantity' #quantity='ngModel' required>\n                <small *ngIf=\"quantity.errors && (quantity.dirty || quantity.touched)\" class=\"error-message\">\n                  <div class=\"validation-msg\" [hidden]=\"!quantity.errors.required\">\n                    Quantity is required.\n                  </div>\n                  <div class=\"validation-msg\" [hidden]=\"!quantity.errors.pattern\">\n                    Please enter number only.\n                  </div>\n                </small>\n              </div>\n            </div>\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-8\">\n              </div>\n              <div class=\"col-sm-4\">\n                <button (click)=\"addEntity()\" class=\"buttonlink float-right\" [disabled]=\"!addEntityForm.form.valid\"\n                  data-dismiss=\"modal\">Add\n                  <span>\n                    <img src=\"assets/SVGs/arrow_dark.svg\">\n                  </span>\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <!--Edit Modal -->\n  <div class=\"modal fade\" id=\"editEntity\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" data-backdrop=\"static\"\n    data-keyboard=\"false\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <!-- Modal content-->\n      <div class=\"modal-content text-center popupcontainer\">\n        <div class=\"\">\n          <div class=\"modal-header\">\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-12\">\n                <p class=\"float-left popupHeading marginl10\">EDIT ENTITY</p>\n                <button type=\"button\" class=\"close\" (click)='closeEditModal()' data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-body\">\n            <form #editEntityForm=\"ngForm\">\n\n              <div class=\"row padding10\">\n                <div class=\"col-sm-6\">\n                  <input type=\"text\" class=\"popupinput\" [(ngModel)]=\"editEntityModal.value\" placeholder=\"Value\"\n                    name='editValue' #editValue='ngModel' required>\n                  <small *ngIf=\"editValue.errors && (editValue.dirty || editValue.touched)\" class=\"error-message\">\n                    <div class=\"value-validation-msg\" [hidden]=\"!editValue.errors.required\">\n                      Value is required.\n                    </div>\n                  </small>\n                </div>\n                <div class=\"col-sm-6\">\n                  <input type=\"text\" class=\"popupinput float-left\" [(ngModel)]=\"editEntityModal.quantity\"\n                    pattern=\"[0-9]+\" placeholder=\"Quantity\" name='editQuantity' #editQuantity='ngModel' required>\n                  <small *ngIf=\"editQuantity.errors && (editQuantity.dirty || editQuantity.touched)\"\n                    class=\"error-message\">\n                    <div [hidden]=\"!editQuantity.errors.required\">\n                      Quantity is required.\n                    </div>\n                    <div [hidden]=\"!editQuantity.errors.pattern\">\n                      Please enter number only.\n                    </div>\n                  </small>\n                </div>\n              </div>\n              <div class=\"row  padding10\">\n                <div class=\"col-sm-8\">\n                </div>\n                <div class=\"col-sm-4\">\n                  <button (click)=\"updateEntity()\" class=\"buttonlink float-right\"\n                    [disabled]=\"!editEntityForm.form.valid\" data-dismiss=\"modal\">Edit\n                    <span>\n                      <img src=\"assets/SVGs/arrow_dark.svg\">\n                    </span>\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <!-- Transact Modal -->\n  <div class=\"modal fade\" id=\"transactEntity\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" data-backdrop=\"static\"\n    data-keyboard=\"false\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n\n      <!-- Modal content-->\n      <div class=\"modal-content text-center popupcontainer\">\n        <div class=\"\">\n          <div class=\"modal-header\">\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-12\">\n                <p class=\"float-left popupHeading marginl10\">CONFIRM TRANSACTION</p>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"row  padding10\">\n              <table style=\"margin-left:auto; margin-right:auto\" id=\"transactTable\">\n                <tr>\n                  <td>\n                    <label class=\"transparentBG float-left\">TYPE</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">ENTITY</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">QUANTITY</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">VALUE</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">OWNER</label>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <p class=\"transparentBG float-left\">{{transact?.type}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\">{{transact?.name}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\" style=\"padding-left:45px;\">{{transact?.quantity}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\" style=\"padding-left:15px;\">{{transact?.value}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\">{{transact?.owner}}</p>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <label class=\"transparentBG float-left\">DATE</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">SUPPLIER</label>\n                  </td>\n\n                </tr>\n                <tr>\n                  <td>\n                    <p class=\"transparentBG float-left\">{{transact?.date}}</p>\n                  </td>\n                  <td>\n                    <select [(ngModel)]=\"supplierName\" name=\"type\" (change)='getSelectedSupplier(supplierName)'\n                      required>\n                      <option value=\"undefined\" disabled selected>Select a supplier</option>\n                      <option *ngFor=\"let supplier of suppliers\" [ngValue]=\"supplier.address\">{{supplier.name}}</option>\n                    </select>\n                  </td>\n\n                </tr>\n              </table>\n            </div>\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-8\">\n              </div>\n              <div class=\"col-sm-4\">\n                <button (click)=\"transactionConfirmation()\" class=\"buttonlink float-right\">Confirm\n                  <span>\n                    <img src=\"assets/SVGs/arrow_dark.svg\">\n                  </span>\n                </button>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <!--Edit Modal -->\n  <div class=\"modal fade\" id=\"entityDetails\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" data-backdrop=\"static\"\n    data-keyboard=\"false\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <!-- Modal content-->\n      <div class=\"modal-content text-center popupcontainer\">\n        <div class=\"\">\n          <div class=\"modal-header\">\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-12\">\n                <p class=\"float-left popupHeading marginl10\">ENTITY DETAILS</p>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"row  padding10\">\n              <table id=\"transactTable\">\n                <tr>\n                  <td>\n                    <label class=\"transparentBG float-left\">OWNER</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">ENTITY NAME</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">QUANTITY</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">VALUE</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">ENTITY ID</label>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <p class=\"transparentBG float-left\">{{entity?.username}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\">{{entity?.name}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG text-center\">{{entity?.quantity}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left padding15\" style=\"padding-left:20px;\">{{entity?.value}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left trackId\">{{entity?.id}}</p>\n                  </td>\n                </tr>\n              </table>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <!--Transaction Details Modal -->\n  <div class=\"modal fade\" id=\"transactionDetails\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\"\n    data-backdrop=\"static\" data-keyboard=\"false\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <!-- Modal content-->\n      <div class=\"modal-content text-center popupcontainer\">\n        <div class=\"\">\n          <div class=\"modal-header\">\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-12\">\n                <p class=\"float-left popupHeading marginl5 \">TRANSACTION DETAILS</p>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"row  padding10\">\n              <table id=\"transactTable\">\n                <tr>\n                  <td>\n                    <label class=\"transparentBG float-left\">TRACK ID</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">STATUS</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">FROM</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">TO</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">ENTITY NAME</label>\n                  </td>\n                  <!-- <td>\n                    <label class=\"transparentBG float-left\">SUPPLIER</label>\n                  </td> -->\n                  <td>\n                    <label class=\"transparentBG float-left\">UPDATED AT</label>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <p class=\"transparentBG float-left trackId\">{{transaction?.id}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\" [ngClass]=\"getStatusColor(transaction?.status) ?\n                    'green_color' : 'red_color'\">{{transaction?.status}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\">{{transaction?.fromUsername}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\">{{transaction?.toUsername}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\">{{transaction?.assetName}}</p>\n                  </td>\n                  <!-- <td class=\"transTo\">\n                    <span class=\"buttonlink aqua_color transparentBG float-left\">{{transactsion?.supplier}}</span>\n                  </td> -->\n                  <td>\n                    <p class=\"transparentBG float-left\">{{transaction?.updatedAt}}</p>\n                  </td>\n                </tr>\n              </table>\n            </div>\n\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-12\">\n                <p class=\"float-left popupHeading marginl5\">SENSOR DETAILS</p>\n              </div>\n            </div>\n            <div>\n              <table id=\"transactTable\">\n                <tr>\n                  <td>\n                    <label class=\"transparentBG float-left\">SENSOR ID</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">NAME</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">STATUS</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">UPDATED AT</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">SUPPLIER</label>\n                  </td>\n                </tr>\n                <tr>\n                  <td>\n                    <p class=\"transparentBG float-left transTo\">{{sensor?.id}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\">{{sensor?.name}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\" [ngClass]=\"getStatusColor(sensor?.status) ?\n                    'green_color' : 'red_color'\">{{sensor?.status}}</p>\n                  </td>\n                  <!-- <td>\n                         <span (click)=\"sensorIdClicked(transact?.sensorId)\" class=\"buttonlink aqua_color transparentBG float-left\">{{transact?.sensorId}}</span>\n                       </td> -->\n                  <td>\n                    <p class=\"transparentBG float-left\">{{sensor?.updatedAt}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\">{{sensor?.supplierName}}</p>\n                  </td>\n                </tr>\n              </table>\n            </div>\n\n            <br>\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-12\">\n                <p class=\"float-left popupHeading marginl5\">TELEMETRY DETAILS</p>\n              </div>\n            </div>\n\n            <div class=\"row  padding10\">\n              <!-- <table id=\"transactTable\" class=\"table table-bordered\"> -->\n              <table class=\"table table-sm table-dark viewtable\">\n                <thead class=\"entity-row\">\n                  <tr>\n                    <td>WEIGHT </td>\n                    <td>TEMPERATURE</td>\n                    <td>LATITUDE</td>\n                    <td>LONGITUDE</td>\n                    <td>LOCATION</td>\n                  </tr>\n                </thead>\n                <div *ngIf='noTelemetryData'>\n                  <p class=\"a-center\" style=\"margin-top: 5%\">\n                    <b>No Data Available</b>\n                  </p>\n                </div>\n                <tbody class=\"table-body entity-row\" *ngIf='!noTelemetryData'>\n\n                  <tr *ngFor=\"let x of transactionTelemetries\">\n                    <td> {{ x.weight }} </td>\n                    <td>{{ x.temperature }}</td>\n                    <td>{{ x.latitude }}</td>\n                    <td>{{ x.longitude }}</td>\n                    <td>{{ x.place }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <div class=\"row  padding10 \" *ngIf='!noTelemetryData'>\n              <div id='transactionMap' #transactionMap class=\"padding10 map\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n  </div>\n\n  <!--Sensor Details Modal -->\n  <div class=\"modal fade\" id=\"sensorDetails\" role=\"dialog\" aria-labelledby=\"exampleModalLabel\" data-backdrop=\"static\"\n    data-keyboard=\"false\" aria-hidden=\"true\">\n    <div class=\"modal-dialog\">\n      <!-- Modal content-->\n      <div class=\"modal-content text-center popupcontainer\">\n        <div class=\"\">\n          <div class=\"modal-header\">\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-12\">\n                <p class=\"float-left popupHeading marginl10 \">SENSOR DETAILS</p>\n                <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                  <span aria-hidden=\"true\">&times;</span>\n                </button>\n              </div>\n            </div>\n          </div>\n          <div class=\"modal-body\">\n            <div class=\"row  padding10\">\n              <table id=\"transactTable\">\n                <tr>\n                  <td>\n                    <label class=\"transparentBG float-left\">SENSOR ID</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">NAME</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">STATUS</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">TRANSACTION ID</label>\n                  </td>\n                  <td>\n                    <label class=\"transparentBG float-left\">UPDATED AT</label>\n                  </td>\n                </tr>\n                <tr>\n                  <td class=\"transTo\">\n                    <p class=\"transparentBG float-left\">{{sensor?.id}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\">{{sensor?.name}}</p>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\" [ngClass]=\"getStatusColor(sensor?.status) ?\n                    'green_color' : 'red_color'\">{{sensor?.status}}</p>\n                  </td>\n                  <td>\n                    <span class=\"transTo\">{{sensor?.trackId}}</span>\n                  </td>\n                  <td>\n                    <p class=\"transparentBG float-left\">{{sensor?.updatedAt}}</p>\n                  </td>\n                </tr>\n              </table>\n            </div>\n\n            <br>\n\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-12\">\n                <p class=\"float-left popupHeading marginl10\">TELEMETRY DETAILS</p>\n              </div>\n            </div>\n            <div class=\"row  padding10\">\n              <table class=\"table table-sm table-dark viewtable\">\n                <thead class=\"entity-row\">\n                  <tr>\n                    <td>WEIGHT </td>\n                    <td>TEMPERATURE</td>\n                    <td>LATITUDE</td>\n                    <td>LONGITUDE</td>\n                    <td>LOCATION</td>\n                  </tr>\n                </thead>\n                <div *ngIf='noSensorTelemetryData'>\n                  <p class=\"a-center\" style=\"margin-top: 5%\">\n                    <b>No Data Available</b>\n                  </p>\n                </div>\n                <tbody class=\"table-body entity-row\" *ngIf='!noSensorTelemetryData'>\n\n                  <tr *ngFor=\"let x of sensorTelemetries\">\n                    <td> {{ x.weight }} </td>\n                    <td>{{ x.temperature }}</td>\n                    <td>{{ x.latitude }}</td>\n                    <td>{{ x.longitude }}</td>\n                    <td>{{ x.place }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </div>\n            <div class=\"row  padding10 \" *ngIf='!noSensorTelemetryData'>\n              <div id='sensorMap' #sensorMap class=\"padding10 map\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n</div>\n","/// <reference types=\"@types/googlemaps\" />\nimport { Component, OnInit, ViewChild, OnDestroy, AfterViewInit } from '@angular/core';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\nimport { DashboardService } from './dashboard.service';\nimport { LoginService } from '../login/login.service';\n\nimport swal from 'sweetalert2';\nimport { SensorModal, Sensor, Telemetry } from './sensor';\nimport { EntityModal, Entity, Supplier } from './entity';\nimport { User } from '../login/login';\nimport { Transact } from './transact';\nimport { Transaction, UpdateTransactionModal } from './transaction';\ndeclare let $: any;\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit, OnDestroy, AfterViewInit {\n\n  @ViewChild('editEntityForm') editEntityForm: any;\n  @ViewChild('addEntityForm') addEntityForm: any;\n  @ViewChild('addSensorForm') addSensorForm: any;\n  @ViewChild('sensorMap') sensorMapElement: any;\n  @ViewChild('transactionMap') transactionMapElement: any;\n\n  sensorMap: google.maps.Map;\n  transactionMap: google.maps.Map;\n  waiting = false;\n\n  entities: Entity[] = [];\n  noEntityData = false;\n\n  transferEntities: Entity[] = [];\n  noTransferEntityData = false;\n\n  user: User;\n  transact: Transact;\n\n  entity: Entity;\n  addEntityModal: EntityModal;\n  editEntityModal: EntityModal;\n\n  subscription: Subscription;\n  sensor: Sensor;\n  sensors: Sensor[];\n  noSensorData = false;\n\n  availableSensors: Sensor[];\n  addSensorModal: SensorModal;\n  sensorName: string;\n  selectedSensor: string;\n  telemetry: Telemetry;\n  sensorTelemetries: Telemetry[];\n  noSensorTelemetryData = false;\n\n  transactionTelemetries: Telemetry[];\n  noTelemetryData = false;\n\n  transactions: Transaction[];\n  noTransactionData = false;\n  transaction: Transaction;\n  updateTransactionModal: UpdateTransactionModal;\n\n  supplier: Supplier;\n  suppliers: Supplier[];\n  supplierName: string;\n  selectedSupplier: any;\n\n  constructor(private dashboardService: DashboardService,\n    private loginService: LoginService, private router: Router) {\n    console.log('Inside Dashboard component constructor');\n  }\n\n  ngOnInit() {\n    this.initialiseData();\n    const observeEntities = this.observableEntities();\n    this.subscription = this.dashboardService.allEntities.subscribe(observeEntities);\n    //Already called on subscription\n    this.dashboardService.updateAllEntities(true);\n    this.dashboardService.showNavbar(true);\n  }\n  ngAfterViewInit(): void {\n    // this.initGoogleMap();\n  }\n  initGoogleMap() {\n    if (typeof google != 'undefined') {\n      var mapProp = {\n        center: new google.maps.LatLng(18.5166172, 73.7720714),\n        zoom: 15,\n        mapTypeId: google.maps.MapTypeId.ROADMAP\n      };\n      this.sensorMap = new google.maps.Map(this.sensorMapElement.nativeElement, mapProp);\n      this.transactionMap = new google.maps.Map(this.transactionMapElement.nativeElement, mapProp);\n      //\n    } else {\n      console.error('Problem loading google map api');\n      // throw new Error('google is not defined');\n    }\n  }\n\n  getUserDetails() {\n    this.waiting = true;\n    this.loginService.getUserDetails().subscribe(\n      (data) => {\n        this.waiting = false;\n        if (data) {\n          this.user = data;\n          localStorage.setItem('currentUser', JSON.stringify(this.user));\n          this.dashboardService.showNavbar(true);//TODO: user not set on header in first nav bar change,need to look \n        } else {\n          swal('Error!', 'Error fetching user details', 'error');\n        }\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n        swal('Error!', 'Backend Error fetching user details', 'error');\n      }\n      , () => {\n        this.displayAssets();\n      });\n  }\n\n  initialiseData() {\n\n    this.addEntityModal = {\n      name: '',\n      value: '',\n      quantity: ''\n    };\n\n    this.editEntityModal = {\n      name: '',\n      value: '',\n      quantity: ''\n    };\n\n    this.user = {\n      id: '',\n      name: '',\n      email: '',\n      username: '',\n      account: '',\n      type: '',\n      balance: 0,\n      active: false\n    };\n\n    this.transact = {\n      from: '',\n      name: '',\n      id: '',\n      supplier: '',\n      quantity: 0,\n      value: 0,\n      sensorId: '',\n      weight: '',\n      place: '',\n      latitude: '',\n      longitude: '',\n      date: new Date(),\n      type: '',\n      trackId: '',\n      owner: '',\n      suppliers: null\n    };\n\n    this.sensor = {\n      id: '',\n      name: '',\n      address: '',\n      trackId: '',\n      status: '',\n      supplierName: '',\n      updatedAt: null,\n      createdAt: null\n    }\n\n    this.addSensorModal = {\n      address: '',\n      name: ''\n    }\n\n    this.telemetry = {\n      id: '',\n      sensorId: '',\n      weight: 0,\n      temperature: 0,\n      latitude: '',\n      longitude: '',\n      place: '',\n      updatedAt: null\n    }\n\n    this.transaction = {\n      to: '',\n      from: '',\n      supplier: '',\n      id: '',\n      assetName: '',\n      amount: 0,\n      updatedAt: '',\n      assetId: '',\n      sensorId: '',\n      status: '',\n      fromUsername: '',\n      toUsername: '',\n      action: ''\n    };\n\n    this.updateTransactionModal = {\n      address: '',\n      transactionId: '',\n      sensorId: '',\n      action: ''\n    }\n\n    this.availableSensors = [];\n  }\n\n  observableEntities() {\n    return {\n      next: (x: boolean) => {\n        if (x) {\n          console.log('Updating all entities on dashboard');\n          this.updateDataOnView();\n        }\n      },\n      error: (err: string) => { console.error('Observer got an error: ' + err); },\n      complete: () => {\n        console.log('Observer got a complete notification');\n      },\n    };\n  }\n\n  updateDataOnView() {\n    this.getUserDetails();\n    // this.displayAssets(); //TODO: since binded into callback fn of getUserDetails\n    this.getTransferableAssets();\n    this.getTransactions();\n    this.getSuppliers();\n  }\n\n  getTransferableAssets() {\n\n    this.waiting = true;\n\n    this.dashboardService.getTrasferableAssets().subscribe(\n      (data) => {\n        this.waiting = false;\n        if (data) {\n          this.noTransferEntityData = false;\n          this.transferEntities = data;\n        } else {\n          this.noTransferEntityData = true;\n          swal('Error!', 'Error fetching assets', 'error');\n        }\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n        this.noTransferEntityData = true;\n\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend Error fetching assets', 'error');\n      }\n    );\n  }\n\n  displayEntities() {\n    if (this.user.type === 'PRODUCER' || this.user.type === 'CONSUMER') {\n      return true;\n    }\n    return false;\n  }\n\n\n  displayAssets() {\n    if (this.user.type === 'PRODUCER' || this.user.type === 'CONSUMER') {\n      this.getEntities();\n    } else if (this.user.type === 'SUPPLIER') {\n      this.getSensors();\n    }\n  }\n\n  getTransactions() {\n    this.waiting = true;\n\n    this.dashboardService.getTransactions().subscribe(\n      (data) => {\n        this.waiting = false;\n\n        if (data && data.length > 0) {\n          this.noTransactionData = false;\n          this.transactions = data;\n\n        } else if (data.length === 0) {\n          this.noTransactionData = true;\n\n        } else {\n          this.noTransactionData = true;\n\n          swal('Error!', 'Error fetching transactions', 'error');\n\n        }\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n        this.noTransactionData = true;\n\n\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend Error fetching transactions', 'error');\n      }, () => {\n        if (this.user.type === 'SUPPLIER') {\n          var transaction;\n          if (this.transactions && this.transactions.length > 0) {\n\n            for (var i = 0; i < this.transactions.length; i++) {\n              transaction = this.transactions[i];\n              if (transaction.status === 'PENDING') {\n                transaction.action = 'ACCEPT';\n              }\n              else if (transaction.status === 'DELIVERED') {\n                transaction.action = 'DONE';\n              }\n              else if (transaction.status === 'IN_PROGRESS') {\n                transaction.action = 'MARK PICKED';\n              } else if (transaction.status === 'PICKED_UP') {\n                transaction.action = 'MARK DELIVERED';\n              }\n            }\n          }\n        }\n\n      }\n\n    );\n  }\n\n  getEntities() {\n    this.waiting = true;\n\n    this.dashboardService.getUserEntities().subscribe(\n      (data) => {\n        this.waiting = false;\n        if (data && data.length > 0) {\n          this.noEntityData = false;\n          this.entities = data;\n        } else if (data.length === 0) {\n          this.noEntityData = true;\n        } else {\n          this.noEntityData = true;\n          swal('Error!', 'Error fetching user entities', 'error');\n\n        }\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n        this.noEntityData = true;\n\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend Error fetching user entities ', 'error');\n      }\n\n    );\n  }\n\n  getSensors() {\n    this.waiting = true;\n    this.dashboardService.getSensors().subscribe(\n      (data) => {\n        this.waiting = false;\n        if (data && data.length > 0) {\n          this.noSensorData = false;\n          this.sensors = data;\n        } else if (data.length === 0) {\n          this.noSensorData = true;\n        } else {\n          this.noSensorData = true;\n          swal('Error!', 'Error fetching Sensors', 'error');\n        }\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n        this.noSensorData = true;\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend Error fetching Sensors', 'error');\n      }, () => {\n        if (this.user.type === 'SUPPLIER') {\n          if (this.sensors && this.sensors.length > 0) {\n\n            for (var i = 0; i < this.sensors.length; i++) {\n              var sensor = this.sensors[i];\n              if (sensor.status === 'AVAILABLE') {\n                this.availableSensors.push(sensor);\n              }\n            }\n          }\n        }\n      }\n\n    );\n  }\n\n  getSensorTelemetries(id) {\n    this.waiting = true;\n    var telemetries;\n    this.dashboardService.getSensorTelemetries(id).subscribe(\n      (data) => {\n        this.waiting = false;\n        console.log('Tele ', data);\n        if (data && data.length > 0) {\n          this.noSensorTelemetryData = false;\n          this.sensorTelemetries = data;\n          telemetries = data;\n        } else if (data.length === 0) {\n          this.noSensorTelemetryData = true;\n\n        } else {\n          this.noSensorTelemetryData = true;\n          swal('Error!', 'Error fetching telemetries', 'error');\n\n        }\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend Error fetching transactions', 'error');\n      }, () => {\n        if (telemetries != null && telemetries.length > 0) {\n          var locations = [], marker;\n          for (var x = 0; x < telemetries.length; x++) {\n            locations.push({ lat: Number(telemetries[x].latitude), lng: Number(telemetries[x].longitude) });\n            marker = new google.maps.Marker({\n              position: new google.maps.LatLng(Number(telemetries[x].latitude), Number(telemetries[x].longitude)),\n              map: this.sensorMap,\n              title: telemetries[x].place,\n              visible: true\n            });\n            // var marker = new MarkerWithLabel({\n            //   position: homeLatLng,\n            //   map: map,\n            //   draggable: true,\n            //   raiseOnDrag: true,\n            //   labelContent: \"ABCD\",\n            //   labelAnchor: new google.maps.Point(15, 65),\n            //   labelClass: \"labels\", // the CSS class for the label\n            //   labelInBackground: false,\n            //   icon: pinSymbol('red')\n            // });\n            // var infowindow = new google.maps.InfoWindow({\n            //   content: telemetries[x].place\n            // });\n            // google.maps.event.addListener(marker, \"click\", function(e) {\n            //   infowindow.open(this.map, this);\n            // });\n          }\n          var flightPath = new google.maps.Polyline({\n            path: locations,\n            geodesic: true,\n            strokeColor: '#FF0000',\n            strokeOpacity: 1.0,\n            strokeWeight: 2\n          });\n          flightPath.setMap(this.sensorMap);\n        }\n      }\n\n\n    );\n  }\n\n  addEntity() {\n    this.waiting = true;\n    this.dashboardService.addEntity(this.addEntityModal).subscribe(\n      (data) => {\n        this.waiting = false;\n        swal('Success!', 'Entity/Asset Added!', 'success').then(\n          (result) => {\n            if (result.value) {\n              this.getEntities();\n              // this.dashboardService.updateAllEntities(true);\n              this.addEntityForm.reset();\n            }\n          }\n        );\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n        swal('Error!', 'Backend Error while adding Entity/Asset', 'error');\n      }\n    );\n  }\n\n  addSensor() {\n\n    this.waiting = true;\n\n    this.dashboardService.addSensor(this.addSensorModal).subscribe(\n      (data) => {\n        this.waiting = false;\n        swal('Success!', 'Sensor Added!', 'success').then(\n          (result) => {\n            if (result.value) {\n              this.addSensorForm.reset();\n              this.dashboardService.updateAllEntities(true);\n            }\n          }\n        );\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend Error while adding sensor', 'error');\n      }\n    );\n  }\n  //TODO : update url\n  showUserDetails() {\n    window.open(\"http://localhost:8000/#/address/\" + this.user.account);\n\n  }\n\n  updateSensorModal() {\n    this.addSensorModal.address = this.user.account;\n  }\n\n  editEntity(data) {\n    this.editEntityModal = data;\n  }\n\n  updateEntity() {\n\n    this.waiting = true;\n\n    this.dashboardService.updateEntity(this.editEntityModal).subscribe(\n      (data) => {\n        this.waiting = false;\n        swal('Success!', 'Entity Updated!', 'success').then(\n          (result) => {\n            if (result.value) {\n              this.dashboardService.updateAllEntities(true);\n              this.router.navigateByUrl('/dashboard');\n            }\n          }\n        );\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend error unable to update entity', 'error');\n      }\n    );\n  }\n\n  transactBtnClicked(data) {\n\n    this.transact.weight = '100' //TODO\n    this.transact.place = 'Bavdhan' //TODO;\n    this.transact.latitude = '18.5156' //TODO;\n    this.transact.longitude = '73.7819' //TODO;\n    this.transact.date = new Date() //TODO;Removed!!!\n    this.transact.from = data.address;\n    this.transact.quantity = data.quantity;\n    this.transact.value = data.value;\n    this.transact.id = data.id;\n    this.transact.owner = data.username;\n    this.transact.type = data.type;\n    this.transact.name = data.name;\n    this.supplier = null;\n  }\n\n  getSuppliers() {\n\n    this.waiting = true;\n\n    this.dashboardService.getSuppliers().subscribe(\n      (data) => {\n\n        this.waiting = false;\n\n        if (data && data.length > 0) {\n          this.suppliers = data;\n        }\n\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend Unable to get suppliers', 'error');\n      }\n    );\n  }\n\n  confirmTransaction() {\n\n    this.waiting = true;\n\n    this.transact.supplier = this.supplierName;\n\n    this.dashboardService.transactEntity(this.transact).subscribe(\n      (data) => {\n        this.waiting = false;\n        swal('Success!', 'Transaction Successful!', 'success').then(\n          (result) => {\n            if (result.value) {\n              this.dashboardService.updateAllEntities(true);\n            }\n          }\n        );\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend error while  confirming transaction', 'error');\n      }\n    );\n  }\n\n  transactionConfirmation() {\n\n    if (!this.supplierName) {\n      swal('Error!', 'Please select a supplier!', 'error');\n      return;\n\n    }\n\n    if (this.user.balance < (this.transact.quantity * this.transact.value)) {\n      swal('Error!', 'Insufficient Balance for transaction!', 'error');\n      return;\n\n    }\n\n    $('#transactEntity').modal('hide');\n\n    this.confirmTransaction();\n  }\n\n  sensorIdClicked(data: Sensor) {\n    this.sensor = data;\n    this.getSensorTelemetries(data.id);\n  }\n\n  entityIdClicked(value: String) {\n\n    this.waiting = true;\n\n    this.dashboardService.getEntityById(value).subscribe(\n      (data) => {\n\n        this.waiting = false;\n        this.entity = data;\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend error while getting entity ', 'error');\n      }\n    );\n  }\n\n  transactionIdClicked(data: Transaction) {\n    this.transaction = data;\n    this.getTransactionTelemetries(data.id, data.sensorId);\n  }\n\n  getTransactionTelemetries(trackId: String, sensorId: String) {\n    this.waiting = true;\n    var telemetries;\n    this.dashboardService.getTransactionTelemetries(trackId).subscribe(\n      (data) => {\n        this.waiting = false;\n\n        if (data && data.length > 0) {\n          this.noTelemetryData = false;\n          this.transactionTelemetries = data;\n          telemetries = data;\n\n        } else if (data.length === 0) {\n          this.noTelemetryData = true;\n\n        } else {\n          this.noTelemetryData = true;\n          swal('Error!', 'Error fetching transactions', 'error');\n        }\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend Error while fetching transactions', 'error');\n      }, () => {\n        if (sensorId !== '0x0000000000000000000000000000000000000000000000000000000000000000') {\n          this.getSensorById(sensorId);\n        }\n        if (telemetries != null && telemetries.length > 0) {\n          var locations = [], marker;\n          for (var x = 0; x < telemetries.length; x++) {\n            locations.push({ lat: Number(telemetries[x].latitude), lng: Number(telemetries[x].longitude) });\n            marker = new google.maps.Marker({\n              position: new google.maps.LatLng(Number(telemetries[x].latitude), Number(telemetries[x].longitude)),\n              map: this.transactionMap,\n              title: telemetries[x].place,\n              visible: true\n            });\n          }\n          var flightPath = new google.maps.Polyline({\n            path: locations,\n            geodesic: true,\n            strokeColor: '#FF0000',\n            strokeOpacity: 1.0,\n            strokeWeight: 2\n          });\n          flightPath.setMap(this.transactionMap);\n        }\n\n      }\n\n    );\n  }\n\n  getSensorById(id: String) {\n\n    this.dashboardService.getSensorById(id).subscribe(\n      (data) => {\n\n        if (data) {\n          this.sensor = data;\n        } else {\n          swal('Error!', 'Error fetching sensor details', 'error');\n\n        }\n      },\n      (err: HttpErrorResponse) => {\n\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend Error fetching sensor details', 'error');\n      }\n    );\n  }\n\n  attachSensor(data: { supplier: string; id: string; action: string; }) {\n    this.updateTransactionModal.address = data.supplier;\n    this.updateTransactionModal.transactionId = data.id;\n    this.updateTransactionModal.action = data.action;\n  }\n\n  acceptSensor(action: string) {\n\n    if (!this.sensorName && action === 'ACCEPT') {\n      swal('Error!', 'Please select a sensor!', 'error');\n      return;\n\n    }\n    $('#attachSensor').modal('hide');\n    if (action === 'ACCEPT') {\n      this.updateTransactionModal.sensorId = this.selectedSensor;\n      this.updateTransactionSensorId(this.updateTransactionModal);\n    } else if (action === 'MARK PICKED') {\n      this.updateTransactionPickUp(this.updateTransactionModal);\n    } else if (action === 'MARK DELIVERED') {\n      this.updateTransactionCompleted(this.updateTransactionModal)\n    }\n  }\n\n  getSelectedSensor(data: string) {\n    this.selectedSensor = data;\n  }\n\n  updateTransactionSensorId(data) {\n    this.waiting = true;\n    this.dashboardService.updateTransactionSensorId(data).subscribe(\n      (data) => {\n        this.waiting = false;\n        swal('Success!', 'Attached Sensor', 'success').then(\n          (result) => {\n            if (result.value) {\n              this.dashboardService.updateAllEntities(true);\n              this.addEntityForm.reset();\n\n            }\n          }\n        );\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend Error while adding sensor', 'error');\n      }\n    );\n  }\n\n  updateTransactionPickUp(data) {\n    this.waiting = true;\n    this.dashboardService.updateTransactionPickUp(data).subscribe(\n      (data) => {\n        this.waiting = false;\n        swal('Success!', 'Transaction status changed', 'success').then(\n          (result) => {\n            if (result.value) {\n              this.dashboardService.updateAllEntities(true);\n              this.addEntityForm.reset();\n\n            }\n          }\n        );\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend Error while updating transaction', 'error');\n      }\n    );\n  }\n\n  updateTransactionCompleted(data) {\n    this.waiting = true;\n    this.dashboardService.updateTransactionCompleted(data).subscribe(\n      (data) => {\n        this.waiting = false;\n        swal('Success!', 'Transaction Completed', 'success').then(\n          (result) => {\n            if (result.value) {\n              this.dashboardService.updateAllEntities(true);\n              this.addEntityForm.reset();\n            }\n          }\n        );\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend Error while updating transaction', 'error');\n      }\n    );\n  }\n\n  cancelTransaction(data) {\n    this.waiting = true;\n    this.dashboardService.cancelTransaction(data).subscribe(\n      (data) => {\n        this.waiting = false;\n        swal('Success!', 'Transaction Cancelled', 'success');\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n\n        swal('Error!', 'Backend Error while transaction cancellation', 'error');\n      }\n    );\n  }\n\n  closeEditModal() {\n    this.editEntityForm.reset();\n\n    this.dashboardService.updateAllEntities(true);\n  }\n\n  closeAddModal() {\n    this.addEntityForm.reset();\n\n  }\n\n  closeAddSensorModal() {\n    this.addSensorForm.reset();\n\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n\n  getSelectedSupplier(selectedSupplier: any) {\n    this.selectedSupplier = selectedSupplier;\n  }\n\n  getStatusColor(status: string) {\n    if (status === 'AVAILABLE' || status === 'DELIVERED'\n      || status === 'COMPLETED' || status === 'SUCCESS') {\n\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n}\n\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { Entity, Supplier } from './entity';\nimport { Transaction, TransferTokenModal,Account } from './transaction';\nimport { Transact } from './transact';\nimport { Telemetry, Sensor } from './sensor';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class DashboardService {\n\n    // Observable string sources\n    private allEntitiesSource = new Subject<boolean>();\n    private navBarSource = new Subject<boolean>();\n\n    // Observable string streams\n    allEntities = this.allEntitiesSource.asObservable();\n    navBar = this.navBarSource.asObservable();\n\n    constructor(private http: HttpClient) { }\n\n    updateAllEntities(update: boolean) {\n        this.allEntitiesSource.next(update);\n    }\n\n    showNavbar(show: boolean) {\n        this.navBarSource.next(show);\n    }\n\n    //Asset Transfer Contract API\n    addEntity(data): Observable<Entity> {\n        return this.http.post<Entity>('contract/asset', data);\n    }\n\n    getUserEntities(): Observable<Entity[]> {\n        return this.http.get<Entity[]>('contract/assets');\n    }\n\n    updateEntity(data): Observable<any> {\n        return this.http.put<any>('contract/asset', data);\n    }\n\n    getEntityById(id: String): Observable<any> {\n        return this.http.get<any>('contract/asset/' + id);\n    }\n\n    getTrasferableAssets() {\n        return this.http.get<Entity[]>('contract/assets/transfer');\n    }\n\n    requestTokens(amount): Observable<any> {\n        return this.http.post<any>('contract/token/request', { value: amount });\n    }\n\n    transferTokens(transferModal: TransferTokenModal): Observable<any> {\n        return this.http.post<any>('contract/token/transfer', transferModal);\n    }\n\n    getAccounts() {\n        return this.http.get<Account[]>('contract/accounts');\n    }\n\n    getPrivateKey(_password) {\n        return this.http.post<any>('wallet/key', { password: _password });\n    }\n\n    getWalletDetails(_mnemonic, _path, _password) {\n        return this.http.post<any>('wallet/details', { mnemonic: _mnemonic, path: _path, password: _password });\n    }\n\n    getTransactions() {\n        return this.http.get<Transaction[]>('contract/transactions');\n    }\n\n    transactEntity(transact: Transact): Observable<any> {\n        return this.http.post<any>('contract/asset/transfer', transact);\n    }\n\n    getTransactionById(id: String): Observable<Transaction> {\n        return this.http.get<Transaction>('contract/transaction/' + id);\n    }\n\n    getSuppliers() {\n        return this.http.get<Supplier[]>('contract/suppliers');\n    }\n    //TODO : Update data type\n    updateTransactionSensorId(data: any): Observable<any> {\n        return this.http.put<any>('contract/transaction/accept', data);\n    }\n\n    updateTransactionPickUp(data): Observable<any> {\n        return this.http.put<any>('contract/transaction/picked', data);\n    }\n\n    updateTransactionCompleted(data): Observable<any> {\n        return this.http.put<any>('contract/transaction/complete', data);\n    }\n\n    cancelTransaction(data): Observable<any> {\n        return this.http.put<any>('contract/transaction/cancel', data);\n    }\n\n    //Telemetry Contract API\n    getSensors(): Observable<Sensor[]> {\n        return this.http.get<Sensor[]>('sensor');\n    }\n\n    getSensorById(id: String): Observable<Sensor> {\n        return this.http.get<Sensor>('sensor/' + id);\n    }\n\n    addSensor(data): Observable<Sensor> {\n        return this.http.post<Sensor>('sensor', data);\n    }\n\n    getTelemetryById(id: String): Observable<Telemetry> {\n        return this.http.get<Telemetry>('sensor/telemetry/' + id);\n    }\n\n    getSensorTelemetries(id: String): Observable<Telemetry[]> {\n        return this.http.get<Telemetry[]>('sensor/telemetries/' + id);\n    }\n\n    getTransactionTelemetries(id: String): Observable<Telemetry[]> {\n        return this.http.get<Telemetry[]>('sensor/transaction/telemetries/' + id);\n    }\n\n}\n","export class Block {\n    free: boolean = true;\n\n    value: string = \"\"; // cross | tick\n    symbol: string = \"\"; // done | close\n\n\n    setValue(value) {\n        this.value = value\n\n        if (this.value == \"tick\") {\n            this.symbol = \"done\";\n        } else {\n            this.symbol = \"close\";\n        }\n    }\n\n\n}","<!-- <div class=\"container\">\n\n  <div class=\"row\">\n  \n      <div class=\"col-md-8\">\n          <div class=\"game-area\">\n              <md-grid-list class=\"tick-tack-grid\" cols=\"3\">\n                  <md-grid-tile *ngFor=\"let block of gs.blocks; let i = index; trackBy: trackByFn\" (click)=\"playerClick(i)\"><i [class]=\"block.symbol == 'done' ? 'material-icons tick' : 'material-icons cross'\">{{ block.symbol }}</i></md-grid-tile>\n              </md-grid-list>\n          </div>\n      </div>\n  \n      <div class=\"col-md-4\">\n          <h2>Score:</h2>\n          <table class=\"table table-bordered\">\n              <tbody>\n                  <tr>\n                      <td>You:</td>\n                      <td>{{ gs.players[0].score }}</td>\n                  </tr>\n  \n                  <tr>\n                      <td>Computer:</td>\n                      <td>{{ gs.players[1].score }}</td>\n                  </tr>\n  \n                  <tr>\n                      <td>Draw:</td>\n                      <td>{{ gs.draw }}</td>\n                  </tr>\n  \n              </tbody>\n          </table>\n          <a class=\"pull-right text-right\" class=\"btn btn-danger\" (click)=\"resetGame($event)\" href=\"#\">Reset Game</a>\n          <a class=\"pull-right text-right\" class=\"btn btn-danger\" (click)=\"newGame($event)\" href=\"#\">New Game</a>\n      </div>\n  \n  </div>\n      \n  \n  </div> -->\n  <p>Game screen</p>","import { Component, OnInit } from '@angular/core';\nimport { GameService } from './game.service';\n@Component({\n  selector: 'app-game',\n  templateUrl: './game.component.html',\n  styleUrls: ['./game.component.css']\n})\nexport class GameComponent implements OnInit {\n\n  lock = false;\n  snackBar;\n\n  constructor(public gs: GameService) {\n\n  }\n  ngOnInit(){\n\n  }\n\n  newGame() {\n    this.gs.freeBlocksRemaining = 9;\n    this.gs.initBlocks();\n    this.lock = false;\n    this.gs.turn = 0;\n  }\n\n  resetGame(event) {\n    location.reload();\n    event.preventDefault();\n  }\n\n  playerClick(i) {\n    if (this.gs.blocks[i].free == false || this.lock == true) { // If Block is already fill, don't Do anything\n      return;\n    }\n\n    this.gs.freeBlocksRemaining -= 1; // Reduce no. of free blocks after each selection\n\n    if (this.gs.freeBlocksRemaining <= 0) {\n\n      this.gs.draw += 1;\n      this.lock = true;\n      this.snackBar.open(\"Game:\", \"Draw\", {\n        duration: 4000,\n      });\n      this.newGame();\n      return;\n    }\n\n\n    this.gs.blocks[i].free = false;\n\n    if (this.gs.turn == 0) { // Player1 Turn\n      this.gs.blocks[i].setValue(\"tick\");\n\n    } else { // Bot Turn\n      this.gs.blocks[i].setValue(\"cross\");\n    }\n\n    var complete = this.gs.blockSetComplete();\n\n    if (complete == false) {\n      this.changeTurn();\n      return;\n\n    } else {\n      this.lock = true;\n      this.gs.players[this.gs.turn].score += 1;\n      this.snackBar.open(\"Winner:\", \"Player \" + (this.gs.turn + 1), {\n        duration: 4000,\n      });\n\n      this.newGame();\n      return;\n    }\n\n  }\n\n\n  botTurn() {\n\n    if (this.gs.freeBlocksRemaining <= 0) {\n      return;\n    }\n\n    var bot_selected = this.gs.figureBotMove() - 1;\n\n    if (this.gs.blocks[bot_selected].free == true) {\n      this.playerClick(bot_selected);\n    } else {\n      this.botTurn();\n      return;\n    }\n\n  }\n\n\n  changeTurn() {\n    var player = this.gs.changeTurn();\n\n    if (player == 1) { // Bot Turn\n      this.botTurn();\n\n    }\n  }\n}\n","import { Injectable } from '@angular/core';\nimport { Player } from './player';\nimport { Block } from './block';\n\n@Injectable()\nexport class GameService {\n\n    players = []\n    turn: number = 0; // By Default First Player turn is First\n    draw: number = 0;\n\n    blocks = [];\n    freeBlocksRemaining = 9;\n\n    constructor() {\n        this.initBlocks();\n        this.initPlayers();\n    }\n\n    initBlocks() {\n        this.blocks = [];\n\n        for (var i = 1; i <= 9; ++i) {\n            var block = new Block();\n\n            block.free = true;\n            block.value = \"\";\n            block.symbol = \"\";\n\n            this.blocks.push(block);\n        }\n    }\n\n    initPlayers() {\n        // Player1\n        var player1 = new Player();\n        player1.bot = false;\n\n        // Bot\n        var player2 = new Player();\n\n\n        this.players.push(player1);\n        this.players.push(player2);\n    }\n\n    changeTurn() {\n\n        if (this.turn == 1) {\n            this.turn = 0;\n        } else {\n            this.turn = 1;\n        }\n\n        return this.turn;\n    }\n\n    blockSetComplete() {\n        var block1 = this.blocks[0];\n        var block2 = this.blocks[1];\n        var block3 = this.blocks[2];\n\n        var block4 = this.blocks[3];\n        var block5 = this.blocks[4];\n        var block6 = this.blocks[5];\n\n        var block7 = this.blocks[6];\n        var block8 = this.blocks[7];\n        var block9 = this.blocks[8];\n\n        if (\n            (block1.free == false && block2.free == false && block3.free == false && (block1.value == block2.value) && (block1.value == block3.value)) ||\n            (block1.free == false && block4.free == false && block7.free == false && (block1.value == block4.value) && (block1.value == block7.value)) ||\n            (block1.free == false && block5.free == false && block9.free == false && (block1.value == block5.value) && (block1.value == block9.value)) ||\n            (block2.free == false && block5.free == false && block8.free == false && (block2.value == block5.value) && (block2.value == block8.value)) ||\n            (block3.free == false && block6.free == false && block9.free == false && (block3.value == block6.value) && (block3.value == block9.value)) ||\n            (block3.free == false && block5.free == false && block7.free == false && (block3.value == block5.value) && (block3.value == block7.value)) ||\n            (block4.free == false && block5.free == false && block6.free == false && (block4.value == block5.value) && (block4.value == block6.value)) ||\n            (block7.free == false && block8.free == false && block9.free == false && (block7.value == block8.value) && (block7.value == block9.value))\n        ) {\n            return true;\n        }\n\n\n        return false;\n    }\n\n\n    figureBotMove() { // Priortize by checking block that is completing \n\n        var bot_move = this.GetCompletingSet();\n\n        if (bot_move > 0) {\n            return bot_move;\n        }\n\n        // 2nd Priority Block enemy from completing Set\n        var bot_move = this.blockEnemyAttemptCompleteSet();\n\n        if (bot_move > 0) {\n            return bot_move;\n        }\n\n        return Math.floor(Math.random() * 8) + 1;\n    }\n\n\n\n    /* \n        Check if any Block Set is completing\n    */\n    GetCompletingSet() {\n\n        var block1 = this.blocks[0];\n        var block2 = this.blocks[1];\n        var block3 = this.blocks[2];\n\n        var block4 = this.blocks[3];\n        var block5 = this.blocks[4];\n        var block6 = this.blocks[5];\n\n        var block7 = this.blocks[6];\n        var block8 = this.blocks[7];\n        var block9 = this.blocks[8];\n\n        // Block#1\n        if (block1.free == false && block2.free == true && block3.free == false && (block1.value == 'cross' && block1.value == block3.value)) {\n            return 2;\n\n        } else if (block1.free == false && block2.free == false && block3.free == true && (block1.value == 'cross' && block1.value == block2.value)) {\n            return 3;\n\n        } else if (block1.free == false && block4.free == true && block7.free == false && (block1.value == 'cross' && block1.value == block7.value)) {\n            return 4;\n\n        } else if (block1.free == false && block4.free == false && block7.free == true && (block1.value == 'cross' && block1.value == block4.value)) {\n            return 7;\n\n        } else if (block1.free == false && block5.free == true && block9.free == false && (block1.value == 'cross' && block1.value == block9.value)) {\n            return 5;\n\n        } else if (block1.free == false && block5.free == false && block9.free == true && (block1.value == 'cross' && block1.value == block5.value)) {\n            return 9;\n\n            // Block#2\n        } else if (block2.free == false && block3.free == false && block1.free == true && (block2.value == 'cross' && block2.value == block3.value)) {\n            return 1;\n\n        } else if (block2.free == false && block8.free == false && block5.free == true && (block2.value == 'cross' && block2.value == block8.value)) {\n            return 5;\n\n        } else if (block2.free == false && block8.free == true && block5.free == false && (block2.value == 'cross' && block2.value == block5.value)) {\n            return 8;\n\n            // Block#3\n        } else if (block3.free == false && block6.free == true && block9.free == false && (block3.value == 'cross' && block3.value == block9.value)) {\n            return 6;\n\n        } else if (block3.free == false && block9.free == true && block6.free == false && (block3.value == 'cross' && block3.value == block6.value)) {\n            return 9;\n\n        } else if (block3.free == false && block5.free == true && block7.free == false && (block3.value == 'cross' && block3.value == block7.value)) {\n            return 5;\n\n        } else if (block3.free == false && block7.free == true && block5.free == false && (block3.value == 'cross' && block3.value == block5.value)) {\n            return 7;\n\n            // Block#4\n        } else if (block4.free == false && block5.free == true && block6.free == false && (block4.value == 'cross' && block4.value == block6.value)) {\n            return 5;\n\n        } else if (block4.free == false && block6.free == true && block5.free == false && (block4.value == 'cross' && block4.value == block5.value)) {\n            return 6;\n\n            // Block#5\n        } else if (block5.free == false && block4.free == true && block6.free == false && (block5.value == 'cross' && block5.value == block6.value)) {\n            return 4;\n\n            // Block#7\n        } else if (block7.free == false && block8.free == true && block9.free == false && (block7.value == 'cross' && block7.value == block9.value)) {\n            return 8;\n\n        } else if (block7.free == false && block9.free == true && block8.free == false && (block7.value == 'cross' && block7.value == block8.value)) {\n            return 9;\n\n            // Block#8\n        } else if (block8.free == false && block7.free == true && block9.free == false && (block8.value == 'cross' && block8.value == block9.value)) {\n            return 7;\n\n        } else { // If none is applicable\n            return 0;\n        }\n\n    }\n\n\n    /* \n        Block Enemy Attempt to Complete Set\n    */\n    blockEnemyAttemptCompleteSet() {\n\n        var block1 = this.blocks[0];\n        var block2 = this.blocks[1];\n        var block3 = this.blocks[2];\n\n        var block4 = this.blocks[3];\n        var block5 = this.blocks[4];\n        var block6 = this.blocks[5];\n\n        var block7 = this.blocks[6];\n        var block8 = this.blocks[7];\n        var block9 = this.blocks[8];\n\n\n        // Block#1\n        if (block1.free == false && block2.free == true && block3.free == false && (block1.value == block3.value)) {\n            return 2;\n\n        } else if (block1.free == false && block2.free == false && block3.free == true && (block1.value == block2.value)) {\n            return 3;\n\n        } else if (block1.free == false && block4.free == true && block7.free == false && (block1.value == block7.value)) {\n            return 4;\n\n        } else if (block1.free == false && block4.free == false && block7.free == true && (block1.value == block4.value)) {\n            return 7;\n\n        } else if (block1.free == false && block5.free == true && block9.free == false && (block1.value == block9.value)) {\n            return 5;\n\n        } else if (block1.free == false && block5.free == false && block9.free == true && (block1.value == block5.value)) {\n            return 9;\n\n            // Block#2\n        } else if (block2.free == false && block3.free == false && block1.free == true && (block2.value == block3.value)) {\n            return 1;\n\n        } else if (block2.free == false && block8.free == false && block5.free == true && (block2.value == block8.value)) {\n            return 5;\n\n        } else if (block2.free == false && block8.free == true && block5.free == false && (block2.value == block5.value)) {\n            return 8;\n\n            // Block#3\n        } else if (block3.free == false && block6.free == true && block9.free == false && (block3.value == block9.value)) {\n            return 6;\n\n        } else if (block3.free == false && block9.free == true && block6.free == false && (block3.value == block6.value)) {\n            return 9;\n\n        } else if (block3.free == false && block5.free == true && block7.free == false && (block3.value == block7.value)) {\n            return 5;\n\n        } else if (block3.free == false && block7.free == true && block5.free == false && (block3.value == block5.value)) {\n            return 7;\n\n            // Block#4\n        } else if (block4.free == false && block5.free == true && block6.free == false && (block4.value == block6.value)) {\n            return 5;\n\n        } else if (block4.free == false && block6.free == true && block5.free == false && (block4.value == block5.value)) {\n            return 6;\n\n            // Block#5\n        } else if (block5.free == false && block4.free == true && block6.free == false && (block5.value == block6.value)) {\n            return 4;\n\n            // Block#7\n        } else if (block7.free == false && block8.free == true && block9.free == false && (block7.value == block9.value)) {\n            return 8;\n\n        } else if (block7.free == false && block9.free == true && block8.free == false && (block7.value == block8.value)) {\n            return 9;\n\n            // Block#8\n        } else if (block8.free == false && block7.free == true && block9.free == false && (block8.value == block9.value)) {\n            return 7;\n\n        } else { // If none is applicable\n            return 0;\n        }\n    }\n\n}","export class Player {\n\n    bot: boolean = true;\n    score: number = 0;\n\n    updateScore(total: number) {\n        this.score += total;\n        return this.score;\n    }\n}","<div class=\"preloader\" [hidden]=\"!waiting\"></div>\n<div class=\"headerbar\">\n  <div class=\"headertext\">\n    <span>\n      <b>SEA FOOD </b>\n      <small class=\"small-text\">CASE STUDY</small>\n    </span>\n  </div>\n  <div class=\"profile\" *ngIf='navBarVisible'>\n    <div class=\"user-info\" (click)='showProfileDetails()'>\n      <div class=\"user-top-panel\">\n        <div class=\"user-top-panel-a\">\n          <span style=\"margin-right: 5px;\">\n            <img src=\"assets/SVGs/user_light.svg\">\n          </span>\n          <span style=\"color: #B4C0C7;/*! word-wrap: ; */\"> {{user?.username}} </span>\n        </div>\n        <div class=\"user-top-panel-b\">\n          <span class=\"useraddress\" disabled=\"disabled\">\n            {{user?.account}} </span>\n        </div>\n      </div>\n      <div class=\"admin-details\" *ngIf='profileDetailsVisible'>\n        <div class=\"profile-details\">\n          <div class=\"profile-details-main\">\n            <span class=\"profile-details-main-left\">Id</span>\n            <span class=\"profile-details-main-right\"> {{user?.id}} </span>\n          </div>\n          <div class=\"profile-details-main\">\n            <span class=\"profile-details-main-left\">Name</span>\n            <span class=\"profile-details-main-right\"> {{user?.name}} </span>\n          </div>\n          <div class=\"profile-details-main\">\n            <span class=\"profile-details-main-left\"> E-mail</span>\n            <span class=\"profile-details-main-right\"> {{user?.email}} </span>\n          </div>\n          <div class=\"profile-details-main\">\n            <span class=\"profile-details-main-left\">Username</span>\n            <span class=\"profile-details-main-right\"> {{user?.username}} </span>\n          </div>\n          <div class=\"profile-details-main\">\n            <span class=\"profile-details-main-left\">Address</span>\n            <span class=\"useraddress\" data-dismiss=\"modal\" (click)=\"showRequestTokensForm()\" data-toggle=\"modal\"\n              data-target=\"#transferToken\"> {{user?.account}} </span>\n          </div>\n          <div class=\"profile-details-main\">\n            <span class=\"profile-details-main-left\">Type</span>\n            <span class=\"profile-details-main-right\"> {{user?.type}} </span>\n          </div>\n        </div>\n        <div class=\"blockchain-details\" (click)=\"showRequestTokensForm()\" data-toggle=\"modal\"\n          data-target=\"#requestToken\">\n          <div>\n            <img height=\"50px\" width=\"50px\" src=\"assets/SVGs/Artboard.svg\">\n          </div>\n          <div class=\"user-balance\">\n            <span>\n              <b>{{user?.balance}}\n              </b>\n            </span>\n          </div>\n          <div class=\"xft-logo\">\n            <span>\n              XFT\n            </span>\n          </div>\n          <!-- <div class=\"profile-details\">\n          <div class=\"row\">\n            <div (click)=\"openTrade()\">\n              <img height=\"100%\" width=\"100%\" src=\"assets/SVGs/binance_logo.png\">\n            </div>\n          </div>\n        </div> -->\n        </div>\n      </div>\n    </div>\n    <div class=\"logout\" (click)=\"logout()\">\n      <img height=\"30px\" width=\"30px\" src=\"assets/SVGs/logout_png.png\">\n    </div>\n  </div>\n</div>\n\n<!--Request Token Modal -->\n<div class=\"modal fade\" id=\"requestToken\" role=\"dialog\" aria-labelledby=\"TokenModalLabel\" data-backdrop=\"static\"\n  data-keyboard=\"false\" aria-hidden=\"true\">\n  <div class=\"modal-dialog request-token-dialog\">\n    <!-- Modal content-->\n    <div class=\"modal-content text-center popupcontainer\">\n      <div class=\"\">\n        <div class=\"modal-header\">\n          <div class=\"row  padding10\">\n            <div class=\"col-sm-12\">\n              <p class=\"float-left popupHeading marginl10\">REQUEST TOKEN</p>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-body\">\n\n          <form #requestTokenForm=\"ngForm\">\n\n            <div class=\"row padding10\">\n              <div class=\"col-sm-12\">\n                <input type=\"text\" class=\"popupinput\" [(ngModel)]=\"tokenValue\" placeholder=\"Token Value\"\n                  pattern=\"[0-9]+\" name='requestedToken' #requestedToken='ngModel' required>\n                <small *ngIf=\"requestedToken.errors && (requestedToken.dirty || requestedToken.touched)\"\n                  class=\"error-message\">\n                  <div class=\"value-validation-msg\" [hidden]=\"!requestedToken.errors.required\">\n                    Token Value is required.\n                  </div>\n                  <div class=\"validation-msg\" [hidden]=\"!requestedToken.errors.pattern\">\n                    Please enter number only.\n                  </div>\n                </small>\n              </div>\n            </div>\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-12\">\n                <button (click)=\"requestTokens()\" class=\"buttonlink float-right\"\n                  [disabled]=\"!requestTokenForm.form.valid\" data-dismiss=\"modal\">Request Token\n                  <span>\n                    <img src=\"assets/SVGs/arrow_dark.svg\">\n                  </span>\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n<!--Transfer Token Modal -->\n<div class=\"modal fade\" id=\"transferToken\" role=\"dialog\" aria-labelledby=\"TokenModalLabel\" data-backdrop=\"static\"\n  data-keyboard=\"false\" aria-hidden=\"true\">\n  <div class=\"modal-dialog request-token-dialog\">\n    <!-- Modal content-->\n    <div class=\"modal-content text-center popupcontainer\">\n      <div class=\"\">\n        <div class=\"modal-header\">\n          <div class=\"row  padding10\">\n            <div class=\"col-sm-12\">\n              <p class=\"float-left popupHeading marginl10\">TRANSFER TOKEN</p>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-body\">\n\n          <form #transferTokenForm=\"ngForm\">\n\n            <div class=\"row padding10\">\n              <div class=\"col-sm-12\">\n                <select [(ngModel)]=\"userAddress\" name=\"type\" placeholder='Select a user' required>\n                  <option value=\"undefined\" disabled selected>Select a user</option>\n                  <option *ngFor=\"let user of userAddresses\" [ngValue]=\"user.account\">{{user.fullName}}</option>\n                </select>\n              </div>\n            </div>\n            <div class=\"row padding10\">\n              <div class=\"col-sm-12\">\n                <input type=\"text\" class=\"popupinput\" [(ngModel)]=\"amountToTransfer\" placeholder=\"Transfer Value\"\n                  pattern=\"[0-9]+\" name='transferedToken' #transferedToken='ngModel' required\n                  style=\"width: 100% !important;\">\n                <small *ngIf=\"transferedToken.errors && (transferedToken.dirty || transferedToken.touched)\"\n                  class=\"error-message\">\n                  <div [hidden]=\"!transferedToken.errors.required\">\n                    Transfer Token Value is required.\n                  </div>\n                  <div [hidden]=\"!transferedToken.errors.pattern\">\n                    Please enter number only.\n                  </div>\n                </small>\n                <small *ngIf=\"amountToTransfer > user?.balance\" class=\"error-message\">\n                  <div>\n                    Transfer Token Value should be less or equal to user balance amount.\n                  </div>\n                </small>\n              </div>\n            </div>\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-12\">\n                <button (click)=\"transferTokens()\" class=\"buttonlink float-right\"\n                  [disabled]=\"!transferTokenForm.form.valid || (amountToTransfer <= 0) \" data-dismiss=\"modal\">Transfer\n                  Token\n                  <span>\n                    <img src=\"assets/SVGs/arrow_dark.svg\">\n                  </span>\n                </button>\n              </div>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</div>\n\n<!--Get Private Key Modal -->\n<div class=\"modal fade\" id=\"getPrivateKey\" role=\"dialog\" aria-labelledby=\"TokenModalLabel\" data-backdrop=\"static\"\n  data-keyboard=\"false\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <!-- Modal content-->\n    <div class=\"modal-content popupcontainer\">\n      <div class=\"modal-header\">\n        <div class=\"row  padding10\">\n          <div class=\"col-sm-12\">\n            <p class=\"float-left popupHeading marginl10\">WALLET DETAILS</p>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-body\">\n\n        <form #getPrivateKeyForm=\"ngForm\">\n          <!-- <div> -->\n          <div class=\"row padding10\" *ngIf='showGetPrivateKeyForm'>\n            <div class=\"col-sm-4\">\n              <input type=\"password\" class=\"popupinput\" [(ngModel)]=\"loginPassword\" placeholder=\"Password\"\n                name=\"password\" #password='ngModel' required>\n              <small *ngIf=\"password.errors && (password.dirty || password.touched)\" class=\"error-message\">\n                <div [hidden]=\"!password.errors.required\">\n                  password is required.\n                </div>\n              </small>\n            </div>\n            <div class=\"col-sm-1\"></div>\n            <div class=\"col-sm-7\">\n              <input type=\"text\" class=\"popupinput\" [(ngModel)]=\"walletPath\" placeholder=\"Hd wallet full path \"\n                name=\"walletPath\">\n            </div>\n          </div>\n\n          <div class=\"row padding10\" *ngIf='showGetPrivateKeyForm'>\n            <div class=\"col-sm-8\">\n              <input type=\"text\" class=\"popupinput\" [(ngModel)]=\"walletMnemonic\" placeholder=\"Hd Wallet Mnemonic\"\n                name=\"walletMnemonic\">\n            </div>\n          </div>\n\n          <div class=\"row  padding10\" *ngIf='showGetPrivateKeyForm'>\n            <div class=\"col-sm-12\">\n              <button (click)=\"getPrivateKey()\" class=\"buttonlink float-right\"\n                [disabled]=\"!getPrivateKeyForm.form.valid\">Get Private Key\n                <span>\n                  <img src=\"assets/SVGs/arrow_dark.svg\">\n                </span>\n              </button>\n            </div>\n          </div>\n          <!-- </div> -->\n\n          <div *ngIf='!showGetPrivateKeyForm'>\n            <div class=\"row  padding10\">\n              <div class=\"col-sm-12\">\n                <p>\n                  <b>Address :</b>\n                </p> {{wallet.address}}\n                <a (click)=\"copyText('address')\" data-toggle=\"tooltip\" title=\"Copy to clipboard\">\n                  <span class=\"glyphicon glyphicon-duplicate\"></span>\n                </a>\n                <br>\n                <br>\n                <br>\n                <p>\n                  <b>Private Key:</b>\n                </p> {{wallet.privateKey}}\n                <a (click)=\"copyText('private key')\" data-toggle=\"tooltip\" title=\"Copy to clipboard\">\n                  <span class=\"glyphicon glyphicon-duplicate\"></span>\n                </a>\n                <br>\n                <br>\n                <br>\n                <p class=\"public_key\">\n                  <b>Public Key:</b> {{wallet.publicKey}} </p>\n                <a (click)=\"copyText('public key')\" data-toggle=\"tooltip\" title=\"Copy to clipboard\">\n                  <span class=\"glyphicon glyphicon-duplicate wordwrap\"></span>\n                </a>\n                <br>\n                <br>\n                <br>\n                <p>\n                  <b>HDWalletPath:</b>\n                </p> {{wallet.hdWalletPath}}\n                <a (click)=\"copyText('wallet path')\" data-toggle=\"tooltip\" title=\"Copy to clipboard\">\n                  <span class=\"glyphicon glyphicon-duplicate\"></span>\n                </a>\n                <br>\n                <br>\n                <br>\n                <p>\n                  <b>Mnemonic:</b>\n                </p> {{wallet.mnemonic}}\n                <a (click)=\"copyText('mnemonic')\" data-toggle=\"tooltip\" title=\"Copy to clipboard\">\n                  <span class=\"glyphicon glyphicon-duplicate\"></span>\n                </a>\n\n              </div>\n            </div>\n\n            <div class=\"row  padding10  text-center\">\n              <button (click)=\"downloadJSONFile()\" class=\"buttonlink\" data-dismiss=\"modal\">Click to download keystore\n                JSON file\n                <span>\n                  <img src=\"assets/SVGs/arrow_dark.svg\">\n                </span>\n              </button>\n            </div>\n          </div>\n        </form>\n      </div>\n    </div>\n\n  </div>\n</div>\n","import { Component, OnInit, AfterViewInit, ViewChild, OnDestroy, Inject } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Subscription } from 'rxjs';\n\nimport { LoginService } from '../login/login.service';\nimport { DashboardService } from '../dashboard/dashboard.service';\n\nimport swal from 'sweetalert2';\nimport { WalletModal } from './wallet';\nimport { TransferTokenModal ,Account} from '../dashboard/transaction';\nimport { User } from '../login/login';\n\ndeclare let $: any;\ndeclare function escape(s: string): string;\n\n@Component({\n  selector: 'app-header',\n  templateUrl: './header.component.html',\n  styleUrls: ['./header.component.css', '../dashboard/dashboard.component.css']\n})\nexport class HeaderComponent implements OnInit, AfterViewInit, OnDestroy {\n\n  showGetPrivateKeyForm = true;\n  waiting = false;\n  user: User;\n  profileDetailsVisible = false;\n  navBarVisible = false;\n  subscription: Subscription;\n  tokenValue: number;\n\n  userAddress: string;\n  userAddresses: Account[]=[];\n  amountToTransfer: number;\n  walletPath: any;\n  walletMnemonic: any;\n  loginPassword: string;\n  wallet: WalletModal;\n\n  @ViewChild('requestTokenForm') requestTokenForm: any;\n  @ViewChild('transferTokenForm') transferTokenForm: any;\n  @ViewChild('getPrivateKeyForm') getPrivateKeyForm: any;\n\n  constructor(@Inject('BASE_API_URL') private baseUrl: string, private loginService: LoginService, private router: Router,\n    private dashboardService: DashboardService) {\n    console.log('Inside Header component constructor');\n    this.subscription = this.dashboardService.navBar.subscribe(\n      navBar => {\n        this.navBarVisible = navBar;\n        if (this.navBarVisible) {\n          this.user = JSON.parse(localStorage.getItem('currentUser'));\n          this.getAllUsers();\n          // if (this.userAddress != null && this.userAddresses !== undefined && this.userAddresses.length != 0) this.getAllUsers();\n        }\n      }\n    );\n  }\n\n  ngOnInit() {\n    this.profileDetailsVisible = false;\n    this.initialiseData();\n  }\n\n  initialiseData() {\n    this.wallet = {\n      address: '',\n      privateKey: '',\n      publicKey: '',\n      mnemonic: '',\n      hdWalletPath: '',\n      jsonFileData: ''\n    }\n  }\n\n  getAllUsers() {\n    this.waiting = true;\n    this.dashboardService.getAccounts().subscribe(\n      (data) => {\n        this.waiting = false;\n        if (data && data.length > 0) {\n          this.userAddresses = data;\n        }\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n        swal('Error!', 'Oops you missed it this time! Try again...!!!', 'error');\n      }\n    );\n  }\n\n  ngAfterViewInit() {\n    // let _self = this;\n\n    // $('html').click(function () {\n    //   if (_self.profileDetailsVisible) {\n    //     _self.profileDetailsVisible = false;\n    //   }\n\n    // });\n\n    // $('.profile').click(function (e) {\n    //   e.stopPropagation();\n\n    // });\n\n    // $('.adminlabel').click(function (e) {\n    //   _self.profileDetailsVisible = !_self.profileDetailsVisible;\n    // });\n\n  }\n\n  //TODO : update url\n  openTrade() {\n    window.open(`${this.baseUrl}/trade`, \"_blank\");\n  }\n\n  showProfileDetails() {\n    this.profileDetailsVisible = !this.profileDetailsVisible;\n  }\n\n  logout() {\n    this.waiting = true;\n    this.profileDetailsVisible = false;\n    this.dashboardService.showNavbar(false);\n    localStorage.clear();\n    this.loginService.logout().subscribe(\n      (data) => {\n        this.waiting = false;\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n        // swal('Error!', 'Backend Error while logout', 'error');\n      }\n    );\n    this.router.navigateByUrl('/login');\n  }\n\n  showRequestTokensForm() {\n    this.profileDetailsVisible = false;\n    this.requestTokenForm.reset();\n    this.getPrivateKeyForm.reset();\n    this.showGetPrivateKeyForm = true;\n    this.userAddress = undefined;\n    this.amountToTransfer = 0;\n  }\n\n  requestTokens() {\n    this.waiting = true;\n    this.dashboardService.requestTokens(this.tokenValue).subscribe(\n      (data) => {\n        this.waiting = false;\n        swal('Success!', 'You got ' + this.tokenValue + ' XFT tokens!!', 'success').then(\n          (result) => {\n            if (result.value) {\n              this.dashboardService.updateAllEntities(true);\n            }\n          }\n        );\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n        swal('Error!', 'Oops you missed it this time! Try again...!!!', 'error');\n      }\n    );\n  }\n\n\n  transferTokens() {\n    this.waiting = true;\n    let transferToken: TransferTokenModal = {\n      to: this.userAddress,\n      value: this.amountToTransfer\n    };\n    this.dashboardService.transferTokens(transferToken).subscribe(\n      (data) => {\n        this.waiting = false;\n        swal('Success!', 'You have transfered ' + this.amountToTransfer + ' XFT tokens!!', 'success').then(\n          (result) => {\n            if (result.value) {\n              this.dashboardService.updateAllEntities(true);\n            }\n          }\n        );\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n\n        if (err.error instanceof Error) {\n          console.log('An error occurred: ', err.error.message); // client\n        } else {\n          console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n        }\n        swal('Error!', 'Oops you missed it this time! Try again...!!!', 'error');\n      }\n    );\n  }\n\n  getPrivateKey() {\n    if (this.loginPassword !== localStorage.getItem('loginPassword')) {\n      swal('Error!', 'Oops Password does not match with the login password!!!', 'error');\n    } else {\n      this.waiting = true;\n      if (this.walletPath && this.walletMnemonic) {\n        this.dashboardService.getWalletDetails(this.walletMnemonic, this.walletPath, this.loginPassword).subscribe(\n          (data) => {\n            this.waiting = false;\n            console.log(data);\n            if (data) {\n              this.showGetPrivateKeyForm = false;\n\n              this.wallet.privateKey = data.privateKey;\n              this.wallet.publicKey = `${data.publicKey}`;\n              this.wallet.hdWalletPath = data.hdWalletPath;\n              this.wallet.mnemonic = data.mnemonic;\n\n              this.wallet.jsonFileData = JSON.stringify(data);\n            } else {\n              swal('Error!', 'Something went wrong...!!!', 'error');\n            }\n          },\n          (err: HttpErrorResponse) => {\n            this.waiting = false;\n            if (err.error instanceof Error) {\n              console.log('An error occurred: ', err.error.message); // client\n            } else {\n              console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n            }\n            swal('Error!', 'Oops you missed it this time! Try again...!!!', 'error');\n          }\n        );\n      }\n      else {\n        this.dashboardService.getPrivateKey(this.loginPassword).subscribe(\n          (data) => {\n            this.waiting = false;\n            if (data) {\n              this.showGetPrivateKeyForm = false;\n              this.wallet.privateKey = data.privateKey;\n              this.wallet.publicKey = `${data.publicKey}`;\n              this.wallet.hdWalletPath = data.hdWalletPath;\n              this.wallet.mnemonic = data.mnemonic;\n              this.wallet.address = data.address;\n              this.wallet.jsonFileData = JSON.stringify(data);\n            } else {\n              swal('Error!', 'Something went wrong...!!!', 'error');\n            }\n          },\n          (err: HttpErrorResponse) => {\n            this.waiting = false;\n            if (err.error instanceof Error) {\n              console.log('An error occurred: ', err.error.message); // client\n            } else {\n              console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n            }\n            swal('Error!', 'Oops you missed it this time! Try again...!!!', 'error');\n          }\n        );\n      }\n    }\n  }\n\n  downloadJSONFile() {\n    let data = JSON.parse(this.wallet.jsonFileData);\n    let uri = 'data:text/json;charset=utf-8,' + escape(JSON.stringify(data.fileContents));\n    let link = document.createElement(\"a\");\n    let fileName = data.fileName + '.json';\n    if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n      window.navigator.msSaveOrOpenBlob(new Blob([(JSON.stringify(data.fileContents))], { type: 'text/json;charset=utf-8' }), fileName);\n    } else {\n      link.href = uri;\n      link.download = fileName;\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n\n  copyText(val: string) {\n    let selBox = document.createElement('textarea');\n    selBox.style.position = 'fixed';\n    selBox.style.left = '0';\n    selBox.style.top = '0';\n    selBox.style.opacity = '0';\n    if (val === 'private key') {\n      selBox.value = this.wallet.privateKey;\n    } else if (val === 'public key') {\n      selBox.value = this.wallet.publicKey;\n    } else if (val === 'wallet path') {\n      selBox.value = this.wallet.hdWalletPath;\n    } else if (val === 'mnemonic') {\n      selBox.value = this.wallet.mnemonic;\n    } else if (val === 'address') {\n      selBox.value = this.wallet.address;\n    }\n    document.body.appendChild(selBox);\n    selBox.focus();\n    selBox.select();\n    document.execCommand('copy');\n    document.body.removeChild(selBox);\n  }\n\n  ngOnDestroy() {\n    this.subscription.unsubscribe();\n  }\n}\n","<p>\n  home works!\n</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","<div class=\"preloader\" [hidden]=\"!waiting\"></div>\n<div class=\"container\">\n  <div class=\"login-form\">\n    <div>\n      <input type=\"text\" [(ngModel)]=\"loginCredentials.username\" placeholder=\"Username\" name='username'\n        #username='ngModel'>\n    </div>\n    <div>\n      <input type=\"password\" [(ngModel)]=\"loginCredentials.password\" placeholder=\"Password\" name=\"password\"\n        #password='ngModel'>\n    </div>\n    <div class=\"btn-right\">\n      <button (click)=\"login()\" class=\"btn btn-primary buttonlarge\"\n        [disabled]='!loginCredentials.username || !loginCredentials.password'>Login</button>\n    </div>\n    <div class=\"btn-right\">\n      <button routerLink='/signup' class=\"buttonlink\">Sign Up\n        <span>\n          <img src=\"assets/SVGs/arrow_dark.svg\">\n        </span>\n      </button>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { LoginService } from './login.service';\n\nimport swal from 'sweetalert2';\nimport { Login } from './login';\n\n@Component({\n  selector: 'app-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.css']\n})\nexport class LoginComponent implements OnInit {\n\n  waiting = false;\n  loginCredentials: Login ;\n\n  constructor(private router: Router, private loginService: LoginService) { \n    console.log('Inside Login component constructor');  \n  }\n\n  ngOnInit() {\n\n    localStorage.clear();\n\n    this.loginCredentials = {\n      username: '',\n      password: ''\n    }\n  }\n\n  login() {\n    this.waiting = true;\n    this.loginService.login(this.loginCredentials).subscribe(\n      (data) => {\n        this.waiting = false;\n        if (data && data.token) {\n          localStorage.setItem('authToken', data.token);\n          localStorage.setItem('loginPassword', this.loginCredentials.password);\n          this.router.navigate(['/dashboard']);\n        } else {\n          swal('Error!', 'Authentication failed', 'error');\n        }\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n        if (err.status === 404) {\n          swal('Error!', 'User does not exist!', 'error');\n        } else if (err.status === 401) {\n          swal('Error!', 'Your Password is Incorrect.Are you unconscious? ', 'error');\n        }\n        else {\n          if (err.error instanceof Error) {\n            console.log('An error occurred: ', err.error.message); // client\n          } else {\n            console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n          }\n          swal('Error!', 'Something went wrong. Please try again.', 'error');\n        }\n\n      }\n    );\n  }\n\n  signUp() {\n    this.router.navigate(['/signup']);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Login, Token, Signup, User } from './login';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LoginService {\n\n    constructor(private http: HttpClient) { }\n\n    login(loginCredentials: Login) {\n        return this.http.post<Token>('auth/login', loginCredentials);\n    }\n\n    logout() {\n        return this.http.put<Token>('auth/logout', {});\n    }\n\n    signUp(signUpDetails: Signup) {\n        return this.http.post<Token>('auth/signup', signUpDetails);\n    }\n\n    getUserDetails() {\n        return this.http.get<User>('auth/user');\n    }\n}\n","<div class=\"preloader\" [hidden]=\"!waiting\"></div>\n<div class=\"container\">\n  <div class=\"signup-form\">\n    <div>\n      <input type=\"text\" [(ngModel)]=\"signup.name\" placeholder=\"Full Name\" name=\"name\" #name='ngModel'>\n    </div>\n    <div>\n      <input type=\"text\" [(ngModel)]=\"signup.email\" pattern=\"^\\w+([\\.-]?\\w+)*@\\w+([\\.-]?\\w+)*(\\.\\w{2,3})+$\"\n        placeholder=\"Email\" name=\"email\" #email='ngModel'>\n    </div>\n    <div>\n      <input type=\"text\" [(ngModel)]=\"signup.username\" placeholder=\"Username\" name=\"username\" #username='ngModel'>\n    </div>\n    <div>\n      <input type=\"password\" minlength=\"8\" [(ngModel)]=\"signup.password\" placeholder=\"Password\" name=\"password\"\n        #password='ngModel'>\n    </div>\n    <div>\n      <select [(ngModel)]=\"categoryType\" name=\"categoryType\" (change)='getSelectedCategory(categoryType)'>\n        <option value=\"undefined\" disabled selected>Select a category</option>\n        <option *ngFor=\"let category of categoryTypes\" [ngValue]=\"category.id\">{{category.type}}</option>\n      </select>\n    </div>\n    <div class=\"btn-right\">\n      <button (click)=\"signUp()\" class=\"btn btn-primary buttonlarge\" type=\"submit\"\n        [disabled]=\"!signup.name || !signup.username || !signup.email || !signup.type\">Sign Up</button>\n    </div>\n    <div class=\"btn-right\">\n      <button routerLink='/login' class=\"buttonlink\">Login\n        <span>\n          <img src=\"assets/SVGs/arrow_dark.svg\">\n        </span>\n      </button>\n    </div>\n  </div>\n</div>\n<!-- <div class=\"jumbotron text-center maincontainer\">\n  <div>\n    <input [(ngModel)]=\"signup.name\" placeholder=\"Name\" />\n    <input [(ngModel)]=\"signup.email\" placeholder=\"Email\" />\n    <input [(ngModel)]=\"signup.username\" placeholder=\"Username\" />\n    <input [(ngModel)]=\"signup.password\" placeholder=\"Password\" />\n    <input [(ngModel)]=\"signup.type\" placeholder=\"Type\" />\n  </div>\n  <div>\n    <button (click)=\"signupcheck()\">Signup</button>\n    <a routerLink='/login'>\n      <button>Login</button>\n    </a>\n  </div>\n</div> -->\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { HttpErrorResponse } from '@angular/common/http';\n\nimport { LoginService } from '../login.service';\n\nimport swal from 'sweetalert2';\nimport { Signup } from '../login';\n\n@Component({\n  selector: 'app-sign-up',\n  templateUrl: './sign-up.component.html',\n  styleUrls: ['./sign-up.component.css', '../login.component.css']\n})\nexport class SignUpComponent implements OnInit {\n\n  categoryType: any;\n  categoryTypes: { id: number; type: string; }[];\n  private selectedCategory: string;\n  signup: Signup;\n  waiting = false;\n\n  constructor(private router: Router, private loginService: LoginService) {\n    console.log('Inside Signup component constructor');\n  }\n\n  ngOnInit() {\n\n    localStorage.clear();\n\n    this.initializeSignUp();\n\n    this.categoryTypes = [\n      {\n        id: 0, type: 'PRODUCER'\n      },\n      {\n        id: 1, type: 'SUPPLIER'\n      },\n      {\n        id: 2, type: 'CONSUMER'\n      }\n    ]\n  }\n\n  initializeSignUp() {\n    this.signup = {\n      name: '',\n      email: '',\n      password: '',\n      username: '',\n      type: ''\n    }\n  }\n\n  getSelectedCategory(selectedCategory) {\n\n    this.selectedCategory = this.categoryTypes[selectedCategory].type;\n\n    this.signup.type = this.selectedCategory;\n  }\n\n  signUp() {\n\n    if (!this.signup.type) {\n      swal(\"Error\", \"Please select category\", \"error\");\n      return;\n    }\n\n    this.waiting = true;\n\n    this.loginService.signUp(this.signup).subscribe(\n      (data) => {\n        this.waiting = false;\n\n        if (data && data.token) {\n          localStorage.setItem('authToken', data.token);\n          localStorage.setItem('loginPassword', this.signup.password);\n\n          this.router.navigate(['/dashboard']);\n\n        } else {\n          swal('Error!', 'Authentication failed', 'error');\n\n        }\n      },\n      (err: HttpErrorResponse) => {\n        this.waiting = false;\n\n        if (err.status === 500) {\n          swal('Error!', 'User Already Exists!', 'error');\n\n        } else {\n          if (err.error instanceof Error) {\n            console.log('An error occurred: ', err.error.message); // client\n          } else {\n            console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n          }\n\n          swal('Error!', 'Something went wrong. Please try again.', 'error');\n        }\n\n      }\n    );\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable, Subject } from 'rxjs';\nimport { AccountBalance, BinanceCred, MyTrade } from './binance';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class BinanceService {\n\n    constructor(private http: HttpClient) { }\n\n    updateCredentials(cred: BinanceCred) {\n        localStorage.setItem('isTradeUrl', JSON.stringify(true));\n\n        return this.http.put('modify/credentials', cred, { responseType: 'text' });\n    }\n\n    feedCredentials(cred: BinanceCred) {\n        localStorage.setItem('isTradeUrl', JSON.stringify(true));\n\n        return this.http.post<BinanceCred>('feed/credentials', cred);\n    }\n\n    getCredentials(): any {\n        localStorage.setItem('isTradeUrl', JSON.stringify(true));\n\n        return this.http.get<BinanceCred>('fetch/credentials');\n    }\n\n    getMyTrades(): any {\n        localStorage.setItem('isTradeUrl', JSON.stringify(true));\n\n        return this.http.get<MyTrade>('fetch/account/trades/');\n    }\n\n    buyAll(): any {\n        localStorage.setItem('isTradeUrl', JSON.stringify(true));\n\n        return this.http.post<any>('all/order/buy', {});\n    }\n\n    sellAll(): any {\n        localStorage.setItem('isTradeUrl', JSON.stringify(true));\n\n        return this.http.post<any>('all/order/sell', {});\n    }\n\n    fetchMarkets(): any {\n        localStorage.setItem('isTradeUrl', JSON.stringify(true));\n\n        return this.http.get<any>('fetch/markets');\n    }\n\n    fetchAccountBalance(): Observable<AccountBalance[]> {\n        localStorage.setItem('isTradeUrl', JSON.stringify(true));\n\n        return this.http.get<AccountBalance[]>('fetch/account/balances');\n    }\n}\n","<div class=\"mainContainer\">\n  <div class=\"preloader\" [hidden]=\"!waiting\"></div>\n  <div class=\"headContainer\">\n    <button class=\"btn btn-primary buttonlarge\" (click)='fetchCredentials()' style=\"width:200px;\" data-toggle=\"modal\" data-target=\"#saveCred\">Credentials</button>\n    <button class=\"btn btn-primary buttonlarge\" (click)='buyAllFavCoins()' style=\"width:200px;\">Buy All</button>\n    <button class=\"btn btn-primary buttonlarge\" (click)='sellAllCoins()' style=\"width:200px;\">Sell All</button>\n    <button class=\"btn btn-primary buttonlarge\" (click)='fetchMyTrades()' style=\"width:200px;\" data-toggle=\"modal\" data-target=\"#myTrades\">My Trades</button>\n    <button class=\"btn btn-primary buttonlarge\" (click)=\"refresh()\">Refresh </button>\n    <!-- <select name=\"markets\" style=\"width:200px;\">\n    <option value=\"undefined \" disabled selected>Select a base pair</option>\n    <option *ngFor=\"let pair of markets \" [ngValue]=\"pair \">{{pair}}</option>\n  </select>-->\n  </div>\n  <div class=\"balanceContainer\" *ngIf='hasBalance'>\n    <table class=\"table table-hover balanceTable \">\n      <thead>\n        <tr>\n          <td>Selected</td>\n          <td class=\"table-font\" style=\"background: purple;color:white\">Asset</td>\n          <td style=\"background: green;color:white\">Available</td>\n          <td style=\"background: red;color:white\">Locked</td>\n        </tr>\n      </thead>\n      <tbody>\n        <tr *ngFor=\"let x of balances\">\n          <td>\n            <input type=\"checkbox\" [(ngModel)]=\"x.selected\" (change)=\"check($event,x)\" name=\"isSelected\" />\n          </td>\n          <td style=\"background: purple;color:white\">{{ x.asset}}</td>\n          <td style=\"background: green;color:white\">{{ x.free}}</td>\n          <td style=\"background: red;color:white\">{{ x.locked}}</td>\n        </tr>\n        <!--<td style=\"background: yellow;width: 20px !important\">\n        <span style=\" cursor: pointer;\" (click)=\"selectCoin(x)\" data-toggle=\"modal\" data-target=\"#buySell\">\n          <img src=\"assets/SVGs/edit_dark.svg\"> \n          BUY/SELL\n        </span>\n      </td> -->\n      </tbody>\n    </table>\n  </div>\n</div>\n\n<!--Credentials Modal -->\n<div class=\"modal fade\" id=\"saveCred\" aria-labelledby=\"exampleModalLabel\" data-backdrop=\"static\" data-keyboard=\"false\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <!-- Modal content-->\n    <div class=\"modal-content text-center popupcontainer\">\n      <div class=\"\">\n        <div class=\"modal-header\">\n          <div class=\"row  padding10\">\n            <div class=\"col-sm-12\">\n              <p class=\"float-left popupHeading marginl10 \">Save Credentials</p>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-body\">\n          <form #credForm=\"ngForm\">\n            <table class=\"table-condensed\" style=\"margin-left:auto; margin-right:auto\">\n              <tr>\n                <td>\n                  <input type=\"text\" [(ngModel)]=\"cred.api_key\" placeholder=\"Api Key\" name='apiKey' #apiKey='ngModel' required>\n                  <small *ngIf=\"apiKey.errors && (apiKey.dirty || apiKey.touched)\" class=\"error-message\">\n                    <div [hidden]=\"!apiKey.errors.required\">\n                      Api Key is required.\n                    </div>\n                  </small>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <input type=\"password\" [(ngModel)]=\"cred.api_secret\" placeholder=\"Api secret\" name=\"apiSecret\" #apiSecret='ngModel' required>\n                  <small *ngIf=\"apiSecret.errors && (apiSecret.dirty || apiSecret.touched)\" class=\"error-message\">\n                    <div [hidden]=\"!apiSecret.errors.required\">\n                      Api secret is required.\n                    </div>\n                  </small>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <input type=\"text\" [(ngModel)]=\"cred.pairs\" placeholder=\"Favourite pairs\" name=\"pairs\" #pairs='ngModel'>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"cred.canTrade\" placeholder=\"Can trade\" name=\"canTrade\">CanTrade\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"cred.use_server_time\" placeholder=\"Use server time\" name=\"use_server_time\">Use server time\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <select [(ngModel)]=\" cred.base_currency \" name=\"type \" #baseCurrency='ngModel' required>\n                    <option value=\"undefined \" disabled selected>Select a base coin</option>\n                    <option *ngFor=\"let pair of baseCurrencies \" [ngValue]=\"pair \">{{pair}}</option>\n                  </select>\n                  <small *ngIf=\"baseCurrency.errors && (baseCurrency.dirty || baseCurrency.touched) \" class=\"error-message \">\n                    <div [hidden]=\"!baseCurrency.errors.required \">\n                      Please set a base currency .\n                    </div>\n                  </small>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <button type=\"submit \" [disabled]=\"!credForm.form.dirty\" (click)=\"saveCredentials()\" data-dismiss=\"modal\" class=\"btn btn-primary buttonlarge float-right\n                    \">Save</button>\n                </td>\n              </tr>\n            </table>\n          </form>\n        </div>\n        <!-- <div class=\"row padding10 \" *ngIf='!noSensorTelemetryData'>\n          <div id='sensorMap' #sensorMap class=\"padding10 map \"></div>\n        </div> -->\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal fade\" id=\"buySell\" aria-labelledby=\"exampleModalLabel\" data-backdrop=\"static\" data-keyboard=\"false\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <!-- Modal content-->\n    <div class=\"modal-content text-center popupcontainer\">\n      <div class=\"\">\n        <div class=\"modal-header\">\n          <div class=\"row  padding10\">\n            <div class=\"col-sm-12\">\n              <p class=\"float-left popupHeading marginl10 \">Buy/Sell</p>\n              <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n                <span aria-hidden=\"true\">&times;</span>\n              </button>\n            </div>\n          </div>\n        </div>\n        <div class=\"modal-body\">\n          <p> Under construction</p>\n          <!-- <form #credForm=\"ngForm\">\n            <table class=\"table-condensed\" style=\"margin-left:auto; margin-right:auto\">\n              <tr>\n                <td>\n                  <input type=\"text\" [(ngModel)]=\"cred.api_key\" placeholder=\"Api Key\" name='apiKey' #apiKey='ngModel' required>\n                  <small *ngIf=\"apiKey.errors && (apiKey.dirty || apiKey.touched)\" class=\"error-message\">\n                    <div [hidden]=\"!apiKey.errors.required\">\n                      Api Key is required.\n                    </div>\n                  </small>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <input type=\"password\" [(ngModel)]=\"cred.api_secret\" placeholder=\"Api secret\" name=\"apiSecret\" #apiSecret='ngModel' required>\n                  <small *ngIf=\"apiSecret.errors && (apiSecret.dirty || apiSecret.touched)\" class=\"error-message\">\n                    <div [hidden]=\"!apiSecret.errors.required\">\n                      Api secret is required.\n                    </div>\n                  </small>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <input type=\"text\" [(ngModel)]=\"cred.pairs\" placeholder=\"Favourite pairs\" name=\"pairs\" #pairs='ngModel'>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"cred.canTrade\" placeholder=\"Can trade\" name=\"canTrade\">CanTrade\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <input class=\"form-check-input\" type=\"checkbox\" [(ngModel)]=\"cred.use_server_time\" placeholder=\"Use server time\" name=\"use_server_time\">Use server time\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <select [(ngModel)]=\" cred.base_currency \" name=\"type \" #baseCurrency='ngModel' required>\n                    <option value=\"undefined \" disabled selected>Select a base coin</option>\n                    <option *ngFor=\"let pair of baseCurrencies \" [ngValue]=\"pair \">{{pair}}</option>\n                  </select>\n                  <small *ngIf=\"baseCurrency.errors && (baseCurrency.dirty || baseCurrency.touched) \" class=\"error-message \">\n                    <div [hidden]=\"!baseCurrency.errors.required \">\n                      Please set a base currency .\n                    </div>\n                  </small>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <button type=\"submit \" [disabled]=\"!credForm.form.dirty\" (click)=\"saveCredentials()\" data-dismiss=\"modal\" class=\"btn btn-primary buttonlarge float-right\n                      \">Save</button>\n                </td>\n              </tr>\n              <tr>\n                <td>\n                  <div *ngIf=\"errorShow \" class=\"error \">\n                    Something went wrong !\n                  </div>\n                </td>\n              </tr>\n            </table>\n          </form> -->\n        </div>\n        <!-- <div class=\"row padding10 \" *ngIf='!noSensorTelemetryData'>\n            <div id='sensorMap' #sensorMap class=\"padding10 map \"></div>\n          </div> -->\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"modal fade\" id=\"myTrades\" aria-labelledby=\"exampleModalLabel\" data-backdrop=\"static\" data-keyboard=\"false\" aria-hidden=\"true\">\n  <div class=\"modal-dialog\">\n    <!-- Modal content-->\n    <div class=\"modal-content \">\n      <div class=\"modal-header\">\n        <div class=\"row  padding10\">\n          <div class=\"col-sm-12\">\n            <p class=\"float-left popupHeading marginl10 \">My Trades</p>\n            <button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\">\n              <span aria-hidden=\"true\">&times;</span>\n            </button>\n          </div>\n        </div>\n      </div>\n      <div class=\"modal-body\">\n        <table class=\"table table-hover \">\n          <thead>\n            <tr>\n              <td class=\"float-left\">Id </td>\n              <td class=\"float-left\">Binance Id</td>\n              <td class=\"float-left\">Order Id</td>\n              <td class=\"float-left\">Client Order Id</td>\n              <td class=\"float-left\">Symbol</td>\n            </tr>\n          </thead>\n          <tbody class=\"table-body\">\n            <tr *ngFor=\"let x of myTrades\">\n              <td> {{ x.id }} </td>\n              <td>{{ x.binance_id }}</td>\n              <td>{{ x.order_id }}</td>\n              <td>{{ x.client_order_id }}</td>\n              <td>{{ x.symbol }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n    </div>\n  </div>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { BinanceService } from './binance.service';\nimport { HttpErrorResponse } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport swal from 'sweetalert2';\nimport { AfterViewInit } from '@angular/core';\nimport { ViewChild } from '@angular/core';\nimport { log } from 'util';\nimport { BinanceCred, AccountBalance, MyTrade } from './binance';\n\n@Component({\n  selector: 'app-trade',\n  templateUrl: './trade.component.html',\n  styleUrls: ['./trade.component.css']\n})\nexport class TradeComponent implements OnInit, AfterViewInit {\n  constructor(private binanceService: BinanceService) { }\n  @ViewChild('credForm') credForm: any;\n\n  cred: BinanceCred;\n  waiting = false;\n  isFirstTimeLogin: Boolean = true;\n  baseCurrencies = ['USDT', 'ETH', 'BTC', 'XRP'];\n  markets = [];\n  balances: AccountBalance[];\n  hasBalance: Boolean = false;\n  totalBalances = {};\n  myTrades: MyTrade[];\n  SweetAlertType = { SUCCESS: 'success', ERROR: 'error', WARNING: 'warning', INFO: 'info', QUESTION: 'question' };\n\n  ngAfterViewInit(): void {\n    this.fetchCredentials();\n    this.waiting = false;\n  }\n\n  ngOnInit(): void {\n    console.log('Inside init');\n    this.cred = {\n      api_key: '',\n      api_secret: '',\n      pairs: '',\n      base_currency: '',\n      canTrade: false,\n      use_server_time: false,\n      authenticated: false\n    };\n  }\n\n\n  saveCredentials() {\n    this.waiting = true;\n    if (this.isFirstTimeLogin) this.feedCredentials(this.cred);\n    else this.updateCred(this.cred);\n    // this.credForm.hide();\n  }\n\n  updateCred(cred: BinanceCred) {\n    console.log('updating credentials');\n    this.binanceService.updateCredentials(cred).subscribe((data) => {\n      if (data) {\n        this.popUp('', 'Successfully saved', this.SweetAlertType.SUCCESS);\n        this.waiting = false;\n      }\n    }, (err: HttpErrorResponse) => {\n      if (err.error instanceof Error) {\n        console.log('An error occurred: ', err.error.message); // client\n      } else {\n        console.log(`Backend returned code ${err.status}, body was: ${err.error}`); // server\n      }\n      console.log(err);\n      this.popUp(err.message, 'Something went wrong. Please try again.', this.SweetAlertType.ERROR);\n    }, () => {\n      this.refresh();\n    });\n  }\n\n  feedCredentials(cred: BinanceCred) {\n    console.log('Feeding credentials');\n    this.binanceService.feedCredentials(cred).subscribe((data) => {\n      if (data) {\n        this.cred = data;\n        this.waiting = false;\n      }\n    }, (err: HttpErrorResponse) => {\n      if (err.error instanceof Error) {\n        console.log('An error occurred: ', err.error.message); // client\n      } else {\n        console.log(`Backend returned code ${err.status}, body was: ${err}`); // server\n      }\n      console.log(err);\n      this.popUp(err.message, 'Something went wrong. Please try again.', this.SweetAlertType.ERROR);\n    }, () => {\n      this.refresh();\n    });\n  }\n\n  fetchCredentials() {\n    console.log('Fetching credentials');\n    this.binanceService.getCredentials().subscribe(data => {\n      if (data) {\n        this.cred = data;\n        this.isFirstTimeLogin = false;\n        this.waiting = false;\n      }\n    }, (err: HttpErrorResponse) => {\n      if (err.error instanceof Error) {\n      }\n      this.waiting = false;\n      console.log(err);\n    }, () => {\n      this.refresh();\n    });\n  }\n\n  setupData() {\n    this.refresh();\n  }\n\n  check(ev, value) {\n    if (ev.target.checked) {\n      console.log(\"Clicked true \", value);\n    } else {\n      console.log(\"Clicked false \", value);\n    }\n  }\n\n  fetchMyTrades() {\n    this.waiting = true;\n    console.log('Fetching trades');\n    this.binanceService.getMyTrades().subscribe(data => {\n      if (data) {\n        this.myTrades = data;\n        this.waiting = false;\n      }\n    }, (err: HttpErrorResponse) => {\n      if (err.error instanceof Error) {\n      }\n      this.waiting = false;\n      console.log(err);\n    });\n\n  }\n\n  refresh() {\n    this.waiting = true;\n    console.log('refresh clicked');\n    if (this.cred && this.cred.authenticated) {\n      console.log('Fetching account details..');\n      this.binanceService.fetchMarkets().subscribe(data => {\n        if (data) {\n          this.markets = data;\n          this.waiting = false;\n        }\n      }, (err: HttpErrorResponse) => {\n        console.log(err);\n        this.waiting = false;\n      });\n      this.binanceService.fetchAccountBalance().subscribe(data => {\n        if (data) {\n          this.balances = data;\n          this.hasBalance = true;\n        }\n        this.waiting = false;\n\n      }, (err: HttpErrorResponse) => {\n        console.log(err);\n        this.waiting = false;\n      });\n    }\n    this.waiting = false;\n  }\n\n  async buyAllFavCoins() {\n    this.waiting = false;\n    var result = await swal('Are you sure?', 'Please check and confirm', 'question');\n    if (result.value) {\n      this.waiting = true;\n      this.binanceService.buyAll().subscribe(data => {\n        if (data) {\n          this.popUp('Success', 'Bought some coins.Check out the trades', this.SweetAlertType.SUCCESS)\n        }\n      }, (err: HttpErrorResponse) => {\n        console.log(err);\n        this.popUp('Something went wrong. Please try again.', err.error, this.SweetAlertType.ERROR);\n      }, () => {\n        this.refresh();\n      });\n    }\n  }\n\n  async sellAllCoins() {\n    this.waiting = false;\n    var result = await swal('Are you sure?', 'Please check and confirm', 'question');\n    if (result.value) {\n      this.waiting = true;\n      this.binanceService.sellAll().subscribe(data => {\n        if (data) {\n          this.popUp('Success', 'Sold all coins.Check out the trades', this.SweetAlertType.SUCCESS);\n        }\n      }, (err: HttpErrorResponse) => {\n        console.log(err);\n        this.popUp('Something went wrong. Please try again.', err.error, this.SweetAlertType.ERROR);\n      }, () => {\n        this.refresh();\n      });\n    }\n  }\n\n  popUp(title, message, type) {\n    this.waiting = false;\n    return swal(title, message, type);\n  }\n\n  selectCoin(asset) {\n    console.log('Selected asset ', asset);\n  }\n\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n// let API_URL =process.env.SERVER_URL;\n// const value = 'localhost';\nlet baseUrl = 'http://localhost:8080/api';\nexport const environment = {\n  production: false,\n  baseUrl:baseUrl\n  // blockchainServiceUrl: value + '/auth',\n  // blockchainContractServiceUrl: value + '/contract',\n  // blockchainSensorUrl: value + '/sensor',\n  // blockchainWalletUrl: value + '/wallet', \n  // blockchainTokenUrl: value + '/token',\n  // blockchainTradeUrl: value + '/binance'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n"],"sourceRoot":""}